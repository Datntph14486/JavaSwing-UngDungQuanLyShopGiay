/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.DoanhMuc_Dao;
import DAO.HoaDonChiTiet_Dao;
import DAO.HoaDon_Dao;
import DAO.KhachHang_Dao;
import DAO.KhuyenMai_Dao;
import DAO.SanPham_Dao;
import Models.DoanhMuc;
import Models.HoaDon;
import Models.HoaDonChiTiet;
import Models.KhuyenMai;
import Models.SanPhamBan;
import Utils.Auth;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author THINKPAD
 */
public class BanHang extends javax.swing.JPanel implements Runnable, ThreadFactory {

    Webcam webcam = null;
    WebcamPanel panel = null;
    Executor executor = Executors.newSingleThreadExecutor(this);
    ArrayList<DoanhMuc> doanhMucs = new ArrayList<>();
    Models.KhachHang khachHang = null;
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");
    boolean isShow = true;
    boolean isChange = false;
    DoanhMuc_Dao doanhMuc_Dao = new DoanhMuc_Dao();
    KhachHang_Dao khachHang_Dao = new KhachHang_Dao();
    SanPham_Dao sanPham_Dao = new SanPham_Dao();
    HoaDon_Dao hoaDon_Dao = new HoaDon_Dao();
    KhuyenMai_Dao khuyenMai_Dao = new KhuyenMai_Dao();
    HoaDonChiTiet_Dao hoaDonChiTiet_Dao = new HoaDonChiTiet_Dao();
    ArrayList<SanPhamBan> sanPhamBans = new ArrayList<>();
    ArrayList<SanPhamBan> gioHang = new ArrayList<>();
    ArrayList<Models.HoaDon> hoaDons = new ArrayList<>();
    ArrayList<Models.KhuyenMai> khuyenMais = new ArrayList<>();
    DefaultTableModel tableModelSanPham = new DefaultTableModel();
    DefaultTableModel tableModelHoaDon = new DefaultTableModel();
    DefaultTableModel tableModelGioHang = new DefaultTableModel();
    DefaultComboBoxModel<String> comboBoxModelHinhThucThanhToan;
    DefaultComboBoxModel<Models.KhuyenMai> comboBoxModelKhuyenMai = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<DoanhMuc> comboBoxModelDanhMuc = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<String> comboBoxModelHinhThucBanHang;

    /**
     * Creates new form BanHang
     */
    public BanHang() {
        initComponents();
        initTable();
        initCbb();
        getData();
        setting();
        initWebcam();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Panel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cbbKM = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JLabel();
        btnChonKH = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnTaoHD = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTienKhachDua = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbHinhThuc = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        cbBanHang = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        btnHuyHD = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtMaHD = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        txtGiamGia = new javax.swing.JTextField();
        txtTongTien1 = new javax.swing.JTextField();
        txtTienThua = new javax.swing.JTextField();
        lblDChi = new javax.swing.JLabel();
        txtDChi = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        lblSDT = new javax.swing.JLabel();
        lblthongTin = new javax.swing.JLabel();
        rdoYes = new javax.swing.JRadioButton();
        rdoNo = new javax.swing.JRadioButton();
        btnGiaoHang = new javax.swing.JButton();
        lblPShip = new javax.swing.JLabel();
        txtPhiShip = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();

        Panel1.setBackground(new java.awt.Color(255, 255, 153));
        Panel1.setPreferredSize(new java.awt.Dimension(950, 760));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MaHoaDon", "Mã NV", "Tên KH", "Ngày tạo", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblHoaDonMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblHoaDon);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "MaSp", "TenSp", "Size", "Mau", "Hang", "Danh Mục", "Số lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGioHang.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblGioHang.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblGioHangFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tblGioHangFocusLost(evt);
            }
        });
        jScrollPane4.setViewportView(tblGioHang);

        jButton4.setBackground(new java.awt.Color(204, 153, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setText("Xóa Sản Phẩm");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(586, 586, 586)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "MaSp", "TenSp", "Size", "Mau", "Hang", "DanhMuc", "Số lượng", "Giá bán"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblSanPham.getTableHeader().setReorderingAllowed(false);
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblSanPhamMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(tblSanPham);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Tìm Kiếm :");

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jComboBox4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Danh Mục :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16)
                        .addGap(38, 38, 38)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Giỏ Hàng");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Hóa Đơn Chờ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Danh Sách Sản Phẩm");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("Khuyến mại");

        cbbKM.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbKM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel5.setBackground(new java.awt.Color(255, 255, 204));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Mã Khách Hàng :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Tên Khách Hàng :");

        txtMaKH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMaKH.setText("             ");

        txtTenKH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTenKH.setText("             ");

        btnChonKH.setBackground(new java.awt.Color(204, 153, 0));
        btnChonKH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnChonKH.setText("Chọn");
        btnChonKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonKHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtTenKH)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChonKH)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMaKH)
                    .addComponent(btnChonKH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTenKH))
                .addGap(23, 23, 23))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Mã Hóa Đơn :");

        btnTaoHD.setBackground(new java.awt.Color(204, 153, 0));
        btnTaoHD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTaoHD.setText("Tạo Hóa Đơn");
        btnTaoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHDActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Tổng Tiền :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Giam Gía :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Thanh Toán :");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Tiền Khách Đưa :");

        txtTienKhachDua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTienKhachDuaKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Tiền Thừa :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Hình Thức Thanh Toán :");

        cbHinhThuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Hình Thức bán Hàng :");

        cbBanHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBanHang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBanHangItemStateChanged(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Mô tả :");

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane1.setViewportView(txtGhiChu);

        btnHuyHD.setBackground(new java.awt.Color(204, 153, 0));
        btnHuyHD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnHuyHD.setText("Hủy Hóa Đơn");
        btnHuyHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyHDActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 153, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setText("Thanh Toán");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtMaHD.setText("            ");

        lblDChi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDChi.setText("Địa chỉ nhận hàng :");

        lblSDT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblSDT.setText("Số Điện Thoại :");

        lblthongTin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblthongTin.setText("Thông Tin :");

        rdoYes.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup1.add(rdoYes);
        rdoYes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdoYes.setSelected(true);
        rdoYes.setText("Khách");
        rdoYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoYesActionPerformed(evt);
            }
        });

        rdoNo.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup1.add(rdoNo);
        rdoNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdoNo.setText("Tùy chỉnh");
        rdoNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNoActionPerformed(evt);
            }
        });

        btnGiaoHang.setBackground(new java.awt.Color(204, 153, 0));
        btnGiaoHang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGiaoHang.setText("Giao Hàng");
        btnGiaoHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiaoHangActionPerformed(evt);
            }
        });

        lblPShip.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPShip.setText("Phí ship :");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTaoHD))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbBanHang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbHinhThuc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTongTien1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblSDT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblthongTin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rdoYes)
                        .addGap(18, 18, 18)
                        .addComponent(rdoNo))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblDChi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDChi, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnGiaoHang, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(btnHuyHD, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblPShip)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPhiShip, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtMaHD))
                    .addComponent(btnTaoHD))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTongTien1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbHinhThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cbBanHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblthongTin)
                    .addComponent(rdoYes)
                    .addComponent(rdoNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPShip)
                    .addComponent(txtPhiShip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDChi)
                    .addComponent(txtDChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSDT)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHuyHD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGiaoHang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout Panel1Layout = new javax.swing.GroupLayout(Panel1);
        Panel1.setLayout(Panel1Layout);
        Panel1Layout.setHorizontalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(cbbKM, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Panel1Layout.createSequentialGroup()
                        .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Panel1Layout.createSequentialGroup()
                                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        Panel1Layout.setVerticalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Panel1Layout.createSequentialGroup()
                        .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Panel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel17)
                            .addComponent(cbbKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(Panel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblSanPhamMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMousePressed
        // TODO add your handling code here:
        if (evt.getClickCount() == 2 && tblSanPham.getSelectedRow() != -1 && tblHoaDon.getSelectedRow() != -1) {
            if (hoaDons.get(tblHoaDon.getSelectedRow()).isDangGiaoHang()) {
                JOptionPane.showMessageDialog(this, "Hóa đơn đang được giao", "Thông báo", JOptionPane.WARNING_MESSAGE);

            } else {

                SanPhamBan sanPhamBan = sanPhamBans.get(tblSanPham.getSelectedRow());

                String input = JOptionPane.showInputDialog(this, "Nhập số lượng sản phẩm", "Thông báo", JOptionPane.DEFAULT_OPTION);
                int value = 0;
                try {
                    value = Integer.parseInt(input);
                    if (value > sanPhamBan.getSoLuong() || value == 0) {
                        JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ . Hiện tại còn : " + sanPhamBan.getSoLuong(), "Thông báo", JOptionPane.WARNING_MESSAGE);

                    } else {

                        // đang sửa lỗi
                        if (cbbKM.getSelectedIndex() == comboBoxModelKhuyenMai.getSize() - 1) {
                            hoaDonChiTiet_Dao.addHDCT(new HoaDonChiTiet(txtMaHD.getText().trim(), 0, sanPhamBan.getMaSp() + "", 1, sanPhamBan.getGiaTien()));
                            sanPhamBan.setSoLuong(sanPhamBan.getSoLuong() - value);
                            sanPham_Dao.updateSL(sanPhamBan);

                        } else {
                            double giaBan = sanPhamBan.getGiaTien();
                            KhuyenMai km = comboBoxModelKhuyenMai.getElementAt(cbbKM.getSelectedIndex());
                            if (hoaDonChiTiet_Dao.checkHoaDonChiTietNotInBlackList(sanPhamBan.getMaSp() + "", km.getMaKM())) {
                                giaBan = km.isLoaiKM() ? giaBan - giaBan * (km.getMucGiam() / 100) : giaBan - km.getMucGiam();
                            };
                            hoaDonChiTiet_Dao.addHDCT(new HoaDonChiTiet(txtMaHD.getText().trim(), 0, sanPhamBan.getMaSp() + "", value, giaBan * value));
                            sanPhamBan.setSoLuong(sanPhamBan.getSoLuong() - value);
                            sanPham_Dao.updateSL(sanPhamBan);
                        }

                        //
                        sanPhamBans.remove(tblSanPham.getSelectedRow());
                        tableModelSanPham.removeRow(tblSanPham.getSelectedRow());
                        sanPhamBan.setSoLuongMua(value);
                        gioHang.add(sanPhamBan);
                        addRowTableGioHang(sanPhamBan);
                        getDataForHoaDon();
                    }

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ", "Thông báo", JOptionPane.WARNING_MESSAGE);

                }
            }

        } else if (evt.getClickCount() == 1) {

        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn");

        }
    }//GEN-LAST:event_tblSanPhamMousePressed

    private void tblHoaDonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMousePressed
        // TODO add your handling code here:
        if (isChange) {
            isChange = !isChange;
        }
        if (!txtDChi.isVisible()) {
            cbBanHangItemStateChanged(null);
        }
        txtDChi.setText("");
        txtSDT.setText("");
        txtGhiChu.setText("");
        txtTienKhachDua.setText("");
        txtTienThua.setText("");
        if (tblHoaDon.getSelectedRow() != -1) {
            if (tableModelHoaDon.getRowCount() != 0) {
                tblGioHang.getSelectionModel().clearSelection();
                HoaDon hd = hoaDons.get(tblHoaDon.getSelectedRow());
                System.out.println(hd.getDChi() + ' ' + hd.isDangGiaoHang());
                txtTenKH.setText(hd.getTenKH());
                txtMaKH.setText(hd.getMaKH());
                txtMaHD.setText(hd.getMaHD());
                txtGhiChu.setText(hd.getGhiChu());
                fillInfor(hd);
                gioHang.clear();
                gioHang = sanPham_Dao.getByHoaDon(hd.getMaHD());
                fillToTableGioHang(gioHang);
                sanPhamBans.clear();
                sanPhamBans = sanPham_Dao.getSanPhamChiTietNotInHoaDonChiTiet(hd.getMaHD());
                fillToTableSanPham(sanPhamBans);
                getDataForHoaDon();
            } else {

                sanPhamBans.clear();
                sanPhamBans = sanPham_Dao.getSanPhamChiTietNotInHoaDonChiTiet("");
                fillToTableSanPham(sanPhamBans);
                gioHang.clear();
                fillToTableGioHang(gioHang);
                clearDataForHoaDon();
            }
        }


    }//GEN-LAST:event_tblHoaDonMousePressed

    private void tblGioHangFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblGioHangFocusGained
        // TODO add your handling code here:
        if (isChange) {
            isChange = !isChange;
            SanPhamBan sp = gioHang.get(tblGioHang.getSelectedRow());
            try {
                int input = Integer.parseInt(tblGioHang.getValueAt(tblGioHang.getSelectedRow(), 6).toString());
                if (hoaDons.get(tblHoaDon.getSelectedRow()).isDangGiaoHang() == false) {

                    if (input > sp.getSoLuong() || input == 0) {
                        JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ . Trong kho có " + sp.getSoLuong());
                        tblGioHang.setValueAt(sp.getSoLuongMua(), tblGioHang.getSelectedRow(), 6);
                    } else {
                        double giaTien = sanPham_Dao.getGiaBan(txtMaHD.getText().trim(), sp.getMaSp() + "");
                        giaTien = giaTien * input;
                        sp.setSoLuong(sp.getSoLuong() + sp.getSoLuongMua() - input);
                        sanPham_Dao.updateSL(sp);
                        sp.setSoLuongMua(input);
                        hoaDonChiTiet_Dao.updateHDCT(sp, txtMaHD.getText().trim() + "", giaTien);
                        tblGioHang.setValueAt(sp.getSoLuongMua(), tblGioHang.getSelectedRow(), 6);
                        getDataForHoaDon();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Không thể chỉnh sửa hóa đơn đang giao");
                    tblGioHang.setValueAt(sp.getSoLuongMua(), tblGioHang.getSelectedRow(), 6);
                    isChange = false;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ");
                tblGioHang.setValueAt(sp.getSoLuongMua(), tblGioHang.getSelectedRow(), 6);
            }

        }

    }//GEN-LAST:event_tblGioHangFocusGained

    private void tblGioHangFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblGioHangFocusLost
        // TODO add your handling code here:
        if (tblGioHang.getRowCount() > 0) {
            isChange = true;
        }

    }//GEN-LAST:event_tblGioHangFocusLost

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (gioHang.size() != 0) {
            int tmp = tblGioHang.getSelectedRow();

            if (tmp != -1 && !hoaDons.get(tblHoaDon.getSelectedRow()).isDangGiaoHang()) {
                int option = JOptionPane.showConfirmDialog(this, "Xóa sản phẩm khỏi giỏ hàng chứ ? ", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    int input = Integer.parseInt(tblGioHang.getValueAt(tmp, 6).toString());
                    SanPhamBan sp = gioHang.get(tmp);
                    hoaDonChiTiet_Dao.deleteHDCT(txtMaHD.getText().trim(), sp.getMaSp() + "");
                    int soLuong = sanPham_Dao.getSoLuong(sp.getMaSp() + "");
                    sp.setSoLuong(soLuong + input);
                    sanPham_Dao.updateSL(sp);
                    tableModelGioHang.removeRow(tmp);
                    gioHang.remove(tmp);
                    sanPhamBans.add(sp);
                    addRowTableSanPham(sp);
                    getDataForHoaDon();
                }
            }
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnChonKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonKHActionPerformed
        // TODO add your handling code here:
        KhachHangDialog dialog = new KhachHangDialog(null, true);
        dialog.setVisible(true);
        khachHang = dialog.khachHang;

        if (khachHang != null) {
            txtMaKH.setText(khachHang.getMaKH());
            txtTenKH.setText(khachHang.getTenKH());
        } else {
            txtMaKH.setText("");
            txtTenKH.setText("");
        }
        rdoNoActionPerformed(null);
        rdoYesActionPerformed(null);


    }//GEN-LAST:event_btnChonKHActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

//            txtMaKH.setText("");
//            txtTenKH.setText("");
        if (tblGioHang.getRowCount() > 0) {
            int row = tblHoaDon.getSelectedRow();
            double tongTienKhongGiamGia = 0;
            txtMaKH.setText(hoaDons.get(row).getMaKH());
            txtTenKH.setText(hoaDons.get(row).getTenKH());

            if (row != -1) {
                if (txtTienThua.getText().trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Chưa đủ tiền ", "Thông báo", JOptionPane.WARNING_MESSAGE);

                } else {
                    int option = JOptionPane.showConfirmDialog(this, "Thanh toán hóa đơn chứ ? ", "Thông báo", JOptionPane.YES_NO_OPTION);
                    if (option == JOptionPane.YES_OPTION) {
                        for (SanPhamBan sp : gioHang) {
                            tongTienKhongGiamGia += (sp.getGiaNhap() * sp.getSoLuongMua());
//                int soLuong = sanPham_Dao.getSoLuong(sp.getMaSp() + "");
//                sp.setSoLuong(soLuong + sp.getSoLuongMua());
//                sanPham_Dao.updateSL(sp);
                        }
                        double thanhToan = 0;

                        try {
                            thanhToan = Double.parseDouble(txtTongTien1.getText().trim().substring(0, txtTongTien1.getText().trim().length() - 4));
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi", "Thông báo", JOptionPane.WARNING_MESSAGE);
                            return;
                        }
                        System.out.println(tongTienKhongGiamGia + "");
                        System.out.println(thanhToan - tongTienKhongGiamGia);// tien lai
                        HoaDon hoaDon = new HoaDon(txtMaHD.getText().trim(), Auth.user.getMaNhanVien(), txtMaKH.getText() != null ? txtMaKH.getText() : "", txtGhiChu.getText().trim(), txtTenKH.getText() != null ? txtTenKH.getText() : "", new Date(), new Date(), thanhToan, thanhToan - tongTienKhongGiamGia, cbHinhThuc.getSelectedIndex() == 0 ? true : false, true, false);
                        hoaDon.setDangGiaoHang(hoaDons.get(row).isDangGiaoHang());
                        hoaDon.setDChi(hoaDons.get(row).getDChi());
                        hoaDon.setSDT(hoaDons.get(row).getSDT());
                        hoaDon.setPhiShip(hoaDons.get(tblHoaDon.getSelectedRow()).getPhiShip());

                        int isSuccess = hoaDon_Dao.updatHoaDon(hoaDon);
                        if (isSuccess > 0) {
                            txtTienKhachDua.setText("");
                            txtTienThua.setText("0");
                            JOptionPane.showMessageDialog(this, "Đã thanh toán hóa đơn", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                            hoaDons.remove(row);
                            tableModelHoaDon.removeRow(row);
                            if (tableModelHoaDon.getRowCount() == 0) {
                                gioHang.clear();
                                tableModelGioHang.setRowCount(0);
                                clearDataForHoaDon();
                            } else if (row == tableModelHoaDon.getRowCount()) {
                                row--;
                                tblHoaDon.setRowSelectionInterval(row, row);
                            } else {
                                tblHoaDon.setRowSelectionInterval(row, row);
                            }
                            tblHoaDonMousePressed(null);
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Giỏ hàng rỗng ", "Thông báo", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnTaoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHDActionPerformed
        // TODO add your handling code here:

        HoaDon hoaDon = null;
        hoaDon = new HoaDon("", Auth.user.getMaNhanVien(), txtMaKH.getText() != null ? txtMaKH.getText() : "", "", txtTenKH.getText() != null ? txtTenKH.getText() : "", null, null, new Date(), null, 0, 0, true, true, true, false);
        hoaDon_Dao.addHoaDon(hoaDon);
        hoaDons.add(hoaDon);
        addRowTableHoaDon(hoaDon);
        tblHoaDon.setRowSelectionInterval(hoaDons.size() - 1, hoaDons.size() - 1);
        tblHoaDonMousePressed(null);
        txtPhiShip.setText("0");
    }//GEN-LAST:event_btnTaoHDActionPerformed

    private void btnHuyHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyHDActionPerformed
        // TODO add your handling code here:
        int row = tblHoaDon.getSelectedRow();
        double tongTienKhongGiamGia = 0;

        if (row != -1) {
            int option = JOptionPane.showConfirmDialog(this, "Hủy hóa đơn chứ ? ", "Thông báo", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                for (SanPhamBan sp : gioHang) {
                    tongTienKhongGiamGia += (sp.getGiaNhap() * sp.getSoLuongMua());
                    int soLuong = sanPham_Dao.getSoLuong(sp.getMaSp() + "");
                    sp.setSoLuong(soLuong + sp.getSoLuongMua());
                    sanPham_Dao.updateSL(sp);
                }
                double thanhToan = 0;

                try {
                    thanhToan = Double.parseDouble(txtTongTien1.getText().trim().substring(0, txtTongTien1.getText().trim().length() - 4));
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi", "Thông báo", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                System.out.println(tongTienKhongGiamGia + "");
                System.out.println(thanhToan - tongTienKhongGiamGia);// tien lai
                HoaDon hoaDon = new HoaDon(txtMaHD.getText().trim(), Auth.user.getMaNhanVien(), txtMaKH.getText() != null ? txtMaKH.getText() : "", txtGhiChu.getText().trim(), txtTenKH.getText() != null ? txtTenKH.getText() : "", new Date(), new Date(), thanhToan, 0, true, false, false);
                hoaDon.setDangGiaoHang(hoaDons.get(row).isDangGiaoHang());
                int isSuccess = hoaDon_Dao.updatHoaDon(hoaDon);
                if (isSuccess > 0) {
                    JOptionPane.showMessageDialog(this, "Đã hủy hóa đơn", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    txtTienKhachDua.setText("");
                    txtTienThua.setText("0");
                    hoaDons.remove(row);
                    tableModelHoaDon.removeRow(row);
                    if (tableModelHoaDon.getRowCount() == 0) {
                        clearDataForHoaDon();
                    } else if (row == tableModelHoaDon.getRowCount()) {
                        row--;
                        tblHoaDon.setRowSelectionInterval(row, row);
                    } else {
                        tblHoaDon.setRowSelectionInterval(row, row);
                    }
                    tblHoaDonMousePressed(null);
                }
            }
        }

    }//GEN-LAST:event_btnHuyHDActionPerformed

    private void txtTienKhachDuaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienKhachDuaKeyReleased
        // TODO add your handling code here:
        if (tblHoaDon.getSelectedRow() != -1) {
            calculate();
        }
    }//GEN-LAST:event_txtTienKhachDuaKeyReleased

    private void cbBanHangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBanHangItemStateChanged
        // TODO add your handling code here:
        if (tblHoaDon.getSelectedRow() >= 0) {
            if (cbBanHang.getSelectedIndex() == 1) {
                enableComponents(rdoYes, rdoNo);
                showStatus();
                disableComponents(txtDChi, txtSDT);
                enableComponents(btnGiaoHang);
                HoaDon hd = hoaDons.get(tblHoaDon.getSelectedRow());
                fillInfor(hd);

            } else {
                rdoYes.setSelected(true);
                disableComponents(rdoYes, rdoNo, btnGiaoHang);
                hideStatus();
            }
        }
    }//GEN-LAST:event_cbBanHangItemStateChanged

    private void rdoYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoYesActionPerformed
        // TODO add your handling code here:
        disableComponents(txtDChi, txtSDT);
        if (tblHoaDon.getSelectedRow() != -1) {
            fillInfor(hoaDons.get(tblHoaDon.getSelectedRow()));

        }

    }//GEN-LAST:event_rdoYesActionPerformed

    private void rdoNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNoActionPerformed
        // TODO add your handling code here:
        txtDChi.setText("");
        txtSDT.setText("");
        enableComponents(txtDChi, txtSDT);

    }//GEN-LAST:event_rdoNoActionPerformed

    private void btnGiaoHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiaoHangActionPerformed
        // TODO add your handling code here:
        if (cbBanHang.getSelectedIndex() == 1) {
            if (txtDChi.getText().trim().isEmpty() || txtSDT.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nhập đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        double phiShip = 0;
        try {
            phiShip = Double.parseDouble(txtPhiShip.getText().trim());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int row = tblHoaDon.getSelectedRow();
        double tongTienKhongGiamGia = 0;

        if (tblGioHang.getRowCount() > 0) {
            if (row != -1 && !hoaDons.get(row).isDangGiaoHang()) {
                int option = JOptionPane.showConfirmDialog(this, "Giao hàng chứ ? ", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    for (SanPhamBan sp : gioHang) {
                        tongTienKhongGiamGia += (sp.getGiaNhap() * sp.getSoLuongMua());
//                    int soLuong = sanPham_Dao.getSoLuong(sp.getMaSp() + "");
//                    sp.setSoLuong(soLuong + sp.getSoLuongMua());
//                    sanPham_Dao.updateSL(sp);
                    }
                    double thanhToan = 0;

                    try {
                        thanhToan = Double.parseDouble(txtTongTien1.getText().trim().substring(0, txtTongTien1.getText().trim().length() - 4));
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi", "Thông báo", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                    HoaDon hoaDon = null;
                    if (cbBanHang.getSelectedIndex() == 1) {
                        hoaDon = new HoaDon(txtMaHD.getText().trim(), Auth.user.getMaNhanVien(), txtMaKH.getText() == null ? "" : txtMaKH.getText(), txtGhiChu.getText().trim(), txtTenKH.getText() == null ? "" : txtTenKH.getText(), txtSDT.getText().trim(), txtDChi.getText().trim(), new Date(), new Date(), thanhToan, thanhToan - tongTienKhongGiamGia, cbHinhThuc.getSelectedIndex() == 0 ? true : false, true, true, true);
                    } else {
                        hoaDon = new HoaDon(txtMaHD.getText().trim(), Auth.user.getMaNhanVien(), txtMaKH.getText() == null ? "" : txtMaKH.getText(), txtGhiChu.getText().trim(), txtTenKH.getText() == null ? "" : txtTenKH.getText(), null, null, new Date(), new Date(), thanhToan, thanhToan - tongTienKhongGiamGia, cbHinhThuc.getSelectedIndex() == 0 ? true : false, true, true, true);
                    }
                    hoaDon.setPhiShip(phiShip);
                    hoaDon.setDangGiaoHang(true);
                    int isSuccess = hoaDon_Dao.updatHoaDon(hoaDon);
                    if (isSuccess > 0) {
                        JOptionPane.showMessageDialog(this, "Đã giao hàng", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        hoaDons.get(row).setDChi(hoaDon.getDChi());
                        hoaDons.get(row).setSDT(hoaDon.getSDT());
                        hoaDons.get(row).setPhiShip(hoaDon.getPhiShip());
                        hoaDons.get(row).setDangGiaoHang(true);
                        tableModelHoaDon.setValueAt("Đang giao hàng", row, 4);
                        tblHoaDonMousePressed(null);
                    }
                    System.out.println(hoaDons.get(row).getDChi());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Giỏ hàng rỗng ", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnGiaoHangActionPerformed

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
        // TODO add your handling code here:
        txtTimKiem.setText("");
        sanPhamBans.clear();
        if (tblHoaDon.getSelectedRow() != -1) {
            if (jComboBox4.getSelectedIndex() == 0) {
                sanPhamBans = sanPham_Dao.getSanPhamChiTietNotInHoaDonChiTiet(txtMaHD.getText().trim());
                fillToTableSanPham(sanPhamBans);
            } else {
                DoanhMuc dm = comboBoxModelDanhMuc.getElementAt(jComboBox4.getSelectedIndex());
                sanPhamBans = sanPham_Dao.getSanPhamChiTietNotInHoaDonChiTietWhere((String) tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0), dm.getMaDoanhMuc());
                fillToTableSanPham(sanPhamBans);
            }
        } else {
            if (jComboBox4.getSelectedIndex() == 0) {
                sanPhamBans.clear();
                sanPhamBans = sanPham_Dao.SlectSPB();
                fillToTableSanPham(sanPhamBans);
            } else {
                DoanhMuc dm = comboBoxModelDanhMuc.getElementAt(jComboBox4.getSelectedIndex());
                System.out.println(dm.getMaDoanhMuc());
                sanPhamBans = sanPham_Dao.getSanPhamChiTietNotInHoaDonChiTietWhere("", dm.getMaDoanhMuc());
                fillToTableSanPham(sanPhamBans);
            }
        }
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        sanPhamBans.clear();
        String value = txtTimKiem.getText().trim();
        if (tblHoaDon.getSelectedRow() != -1) {
            if (jComboBox4.getSelectedIndex() == 0) {
                sanPhamBans = sanPham_Dao.getSanPhamChiTietNotInHoaDonChiTietTim2((String) tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0), "",value);
                fillToTableSanPham(sanPhamBans);
            } else {
                DoanhMuc dm = comboBoxModelDanhMuc.getElementAt(jComboBox4.getSelectedIndex());
                sanPhamBans = sanPham_Dao.getSanPhamChiTietNotInHoaDonChiTietTim((String) tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0), dm.getMaDoanhMuc(),value);
                fillToTableSanPham(sanPhamBans);
            }
        } else {
            if (jComboBox4.getSelectedIndex() == 0) {
                sanPhamBans.clear();
                sanPhamBans = sanPham_Dao.getSanPhamChiTietNotInHoaDonChiTietTim2("", "",value);
                fillToTableSanPham(sanPhamBans);
            } else {
                DoanhMuc dm = comboBoxModelDanhMuc.getElementAt(jComboBox4.getSelectedIndex());
                System.out.println(dm.getMaDoanhMuc());
                sanPhamBans = sanPham_Dao.getSanPhamChiTietNotInHoaDonChiTietTim("", dm.getMaDoanhMuc(),value);
                fillToTableSanPham(sanPhamBans);
            }
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel1;
    private javax.swing.JButton btnChonKH;
    private javax.swing.JButton btnGiaoHang;
    private javax.swing.JButton btnHuyHD;
    private javax.swing.JButton btnTaoHD;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbBanHang;
    private javax.swing.JComboBox<String> cbHinhThuc;
    private javax.swing.JComboBox<String> cbbKM;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblDChi;
    private javax.swing.JLabel lblPShip;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblthongTin;
    private javax.swing.JRadioButton rdoNo;
    private javax.swing.JRadioButton rdoYes;
    private javax.swing.JTable tblGioHang;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtDChi;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtGiamGia;
    private javax.swing.JLabel txtMaHD;
    private javax.swing.JLabel txtMaKH;
    private javax.swing.JTextField txtPhiShip;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JLabel txtTenKH;
    private javax.swing.JTextField txtTienKhachDua;
    private javax.swing.JTextField txtTienThua;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTongTien;
    private javax.swing.JTextField txtTongTien1;
    // End of variables declaration//GEN-END:variables

    private void getData() {
        sanPhamBans = sanPham_Dao.SlectSPB();
        fillToTableSanPham(sanPhamBans);
        hoaDons = hoaDon_Dao.getHoaDonsDangXyLy();
        fillToTableHoaDon(hoaDons);
    }

    private void fillToTableSanPham(ArrayList<SanPhamBan> list) {
        tableModelSanPham.setRowCount(0);
        for (SanPhamBan sanPhamBan : list) {
            addRowTableSanPham(sanPhamBan);
        }
    }

    private void fillToTableHoaDon(ArrayList<Models.HoaDon> list) {
        tableModelHoaDon.setRowCount(0);
        for (HoaDon hd : list) {
            addRowTableHoaDon(hd);

        }
    }

    private void fillToTableGioHang(ArrayList<SanPhamBan> list) {
        tableModelGioHang.setRowCount(0);
        for (SanPhamBan sanPhamBan : list) {
            addRowTableGioHang(sanPhamBan);
        }
    }

    private void initTable() {
        tableModelSanPham = (DefaultTableModel) tblSanPham.getModel();
        tableModelHoaDon = (DefaultTableModel) tblHoaDon.getModel();
        tableModelGioHang = (DefaultTableModel) tblGioHang.getModel();
        tableModelGioHang.setRowCount(0);
    }

    private void initCbb() {
        String hinhThucThanhToan[] = {"Trả tiền trực tiếp", "Chuyển khoản"};
        String hinhThucBanHang[] = {"Trực tiếp", "Giao hàng"};
        jComboBox4.setModel((ComboBoxModel) comboBoxModelDanhMuc);
        cbbKM.setModel((ComboBoxModel) comboBoxModelKhuyenMai);
        getDataKhuyenMai();
        getDataDanhMuc();
        comboBoxModelHinhThucBanHang = new DefaultComboBoxModel<>(hinhThucBanHang);
        comboBoxModelHinhThucThanhToan = new DefaultComboBoxModel<>(hinhThucThanhToan);
        cbHinhThuc.setModel(comboBoxModelHinhThucThanhToan);
        cbBanHang.setModel(comboBoxModelHinhThucBanHang);

    }

    private void addRowTableGioHang(SanPhamBan sanPhamBan) {
        tableModelGioHang.addRow(new Object[]{
            sanPhamBan.getMaSp(), sanPhamBan.getTenSp(), sanPhamBan.getSoSize(), sanPhamBan.getTenMau(), sanPhamBan.getTenHnag(), sanPhamBan.getTenDanhMuc(), sanPhamBan.getSoLuongMua()
        });
    }

    private void addRowTableHoaDon(HoaDon hd) {
        tableModelHoaDon.addRow(new Object[]{
            hd.getMaHD(), hd.getMaNV(), hd.getTenKH(), simpleDateFormat.format(hd.getNgayTao()), hd.isDangGiaoHang() ? "Đang giao hàng" : "Đang xử lý"
        });
    }

    private void addRowTableSanPham(SanPhamBan sanPhamBan) {
        tableModelSanPham.addRow(new Object[]{
            sanPhamBan.getMaSp(), sanPhamBan.getTenSp(), sanPhamBan.getSoSize(), sanPhamBan.getTenMau(), sanPhamBan.getTenHnag(), sanPhamBan.getTenDanhMuc(), sanPhamBan.getSoLuong(), sanPhamBan.getGiaTien()
        });
    }

    private void getDataKhuyenMai() {
        khuyenMais = khuyenMai_Dao.getAll(new Date());
        cbbKM.removeAllItems();
        for (KhuyenMai km : khuyenMais) {
            comboBoxModelKhuyenMai.addElement(km);
        }
        comboBoxModelKhuyenMai.addElement(new Models.KhuyenMai("", "Không áp dụng", true, true, null, null, 0));

    }

    private void getDataForHoaDon() {
        double tongTien = 0, thanhToan = 0;
        for (SanPhamBan sanPhamBan : gioHang) {
            tongTien += sanPhamBan.getGiaTien() * sanPhamBan.getSoLuongMua();
        }
        thanhToan = hoaDonChiTiet_Dao.getGiaTienByHoaDon(txtMaHD.getText().trim());
        txtGiamGia.setText((tongTien - thanhToan) + " VND");

        txtTongTien1.setText(thanhToan + " VND");
        txtTongTien.setText(tongTien + " VND");
    }

    private void clearDataForHoaDon() {
        txtMaHD.setText("");
        txtTenKH.setText("");
        txtMaKH.setText("");
        txtTienKhachDua.setText("");
        txtTienThua.setText("");
        txtTongTien.setText("");
        txtTongTien1.setText("");
        txtGiamGia.setText("");

    }

    private void calculate() {
        if (tblGioHang.getRowCount() > 0) {
            double thanhToan = 0;
            double tienKhach = 0;
            try {
                thanhToan = Double.parseDouble(txtTongTien1.getText().trim().substring(0, txtTongTien1.getText().trim().length() - 4));
                tienKhach = Double.parseDouble(txtTienKhachDua.getText().trim());
                double tienThoi = thanhToan - tienKhach;
                txtTienThua.setText(tienThoi <= 0 ? Math.abs(tienThoi) + "" : "");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Không hợp lệ", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                txtTienKhachDua.setText("");
                txtTienThua.setText("");
            }

        }

    }

    private void hideComponents(JComponent... component) {
        for (JComponent jComponent : component) {
            jComponent.setVisible(false);
        }
    }

    private void showComponents(JComponent... component) {
        for (JComponent jComponent : component) {
            jComponent.setVisible(true);
        }
    }

    private void disableComponents(JComponent... component) {
        for (JComponent jComponent : component) {
            jComponent.setEnabled(false);
        }
    }

    private void enableComponents(JComponent... component) {
        for (JComponent jComponent : component) {
            jComponent.setEnabled(true);
        }
    }

    private void setting() {
        disableComponents(rdoYes, rdoNo, txtGiamGia, txtTienThua, txtTongTien, txtTongTien1, btnGiaoHang);
        hideStatus();
    }

    private void showStatus() {
        txtPhiShip.setText("0");
        showComponents(txtDChi, lblDChi, txtSDT, lblSDT, lblPShip, txtPhiShip);
    }

    private void hideStatus() {
        hideComponents(txtDChi, lblDChi, txtSDT, lblSDT, lblPShip, txtPhiShip);
    }

    private void fillInfor(HoaDon hd) {
        if (hd.isDangGiaoHang()) {
            txtDChi.setText(hd.getDChi());
            txtSDT.setText(hd.getSDT());
            txtPhiShip.setText(hd.getPhiShip() + "");
        } else {
            txtPhiShip.setText("0");
            khachHang = getKhachHang(txtMaKH.getText());
            if (khachHang == null) {
            } else {
                fillData();
            }
        }

    }

    private Models.KhachHang getKhachHang(String maKH) {
        return khachHang_Dao.getByMaKH(maKH);

    }

    private void fillData() {
        txtDChi.setText(khachHang.getDiaChi());
        txtSDT.setText(khachHang.getSdt());
    }

    public void changeCard() {
        getData();
        clearDataForHoaDon();
        jComboBox4.setSelectedIndex(0);
        jComboBox4ItemStateChanged(null);
        cbBanHang.setSelectedIndex(0);
        cbHinhThuc.setSelectedIndex(0);
        rdoYes.setSelected(true);
        disableComponents(rdoYes, rdoNo, btnGiaoHang);
        hideStatus();
    }

    private void initWebcam() {
        Dimension dimension = WebcamResolution.QVGA.getSize();
        webcam = Webcam.getWebcams().get(0);
        webcam.setViewSize(dimension);
        panel = new WebcamPanel(webcam);
        panel.setPreferredSize(dimension);
        jPanel1.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 275, 255));
        executor.execute(this);
    }

    @Override
    public void run() {
        do {
            try {
                Thread.sleep(500);
            } catch (Exception e) {
            }
            BufferedImage image = null;
            Result result = null;
            if (webcam.isOpen()) {
                if ((image = webcam.getImage()) == null) {
                    continue;
                }
            }
            LuminanceSource source = null;
            try {
                source = new BufferedImageLuminanceSource(image);
            } catch (Exception e) {
            }
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
            try {
                result = new MultiFormatReader().decode(bitmap);
            } catch (Exception e) {
            }
            if (result != null) {
                System.out.println(result.getText());
                if (tblHoaDon.getSelectedRow() != -1) {

                    for (int i = 0; i < sanPhamBans.size(); i++) {
                        if (result.getText().equalsIgnoreCase(sanPhamBans.get(i).getMaSp())) {
                            String input = JOptionPane.showInputDialog(null, "Nhập số lượng", "Thông báo", JOptionPane.QUESTION_MESSAGE);
                            int value = 0;
                            try {
                                value = Integer.parseInt(input);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "Nhập số lượng", "Thông báo", JOptionPane.WARNING_MESSAGE);
                            }
                            if (value > sanPhamBans.get(i).getSoLuong() || value == 0) {
                                JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ . Hiện tại còn : " + sanPhamBans.get(i).getSoLuong(), "Thông báo", JOptionPane.WARNING_MESSAGE);

                            } else {

                                // đang sửa lỗi
                                if (cbbKM.getSelectedIndex() == comboBoxModelKhuyenMai.getSize() - 1) {
                                    hoaDonChiTiet_Dao.addHDCT(new HoaDonChiTiet(txtMaHD.getText().trim(), 0, sanPhamBans.get(i).getMaSp() + "", 1, sanPhamBans.get(i).getGiaTien()));
                                    sanPhamBans.get(i).setSoLuong(sanPhamBans.get(i).getSoLuong() - value);
                                    sanPham_Dao.updateSL(sanPhamBans.get(i));

                                } else {
                                    double giaBan = sanPhamBans.get(i).getGiaTien();
                                    KhuyenMai km = comboBoxModelKhuyenMai.getElementAt(cbbKM.getSelectedIndex());
                                    if (hoaDonChiTiet_Dao.checkHoaDonChiTietNotInBlackList(sanPhamBans.get(i).getMaSp() + "", km.getMaKM())) {
                                        giaBan = km.isLoaiKM() ? giaBan - giaBan * (km.getMucGiam() / 100) : giaBan - km.getMucGiam();
                                    };
                                    hoaDonChiTiet_Dao.addHDCT(new HoaDonChiTiet(txtMaHD.getText().trim(), 0, sanPhamBans.get(i).getMaSp() + "", value, giaBan * value));
                                    sanPhamBans.get(i).setSoLuong(sanPhamBans.get(i).getSoLuong() - value);
                                    sanPham_Dao.updateSL(sanPhamBans.get(i));
                                }

                                //
                                sanPhamBans.get(i).setSoLuongMua(value);
                                gioHang.add(sanPhamBans.get(i));
                                addRowTableGioHang(sanPhamBans.get(i));
                                sanPhamBans.remove(i);
                                tableModelSanPham.removeRow(i);
                                getDataForHoaDon();
                            }
                            break;
                        }
                    }
                }
            }
        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread thread = new Thread(r, "webcam");
        thread.setDaemon(true); // thiết lập là luồng daemon
        return thread;
    }

    private int getIndex(String maSP) {
        int tmp = -1;
        for (int i = 0; i < sanPhamBans.size(); i++) {
            if (sanPhamBans.get(i).getMaSp().equals(maSP)) {
                tmp = i;
                break;
            }
        }
        return tmp;
    }

    private void getDataDanhMuc() {
        doanhMucs = doanhMuc_Dao.getAll();
        comboBoxModelDanhMuc.removeAllElements();
        DoanhMuc dm = new DoanhMuc("", "Tất cả");
        comboBoxModelDanhMuc.addElement(dm);
        for (DoanhMuc doanhMuc : doanhMucs) {
            comboBoxModelDanhMuc.addElement(doanhMuc);
        }

    }
}
