/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.BlackList_Dao;
import DAO.DoanhMuc_Dao;
import DAO.KhuyenMai_Dao;
import DAO.SanPhamChiTiet_Dao;
import Models.DoanhMuc;
import Models.SanPhamChiTiet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thang
 */
public class KhuyenMai extends javax.swing.JPanel {

    String arrDanhSach[] = {"Sản phẩm", "Đen"};
    String arrHinhThucGiamGia[] = {"Theo giá tiền", "Theo %"};
    int tmp = -1;
    int index;
    boolean isOn = false;
    DoanhMuc_Dao doanhMuc_Dao = new DoanhMuc_Dao();
    KhuyenMai_Dao khuyenMai_Dao = new KhuyenMai_Dao();
    BlackList_Dao blackList_Dao = new BlackList_Dao();
    SanPhamChiTiet_Dao sanPhamChiTiet_Dao = new SanPhamChiTiet_Dao();
    ArrayList<DoanhMuc> arrayListDoanhMucs = new ArrayList<>();
    ArrayList<Models.KhuyenMai> arrayListKhuyenMais = new ArrayList<>();
    ArrayList<SanPhamChiTiet> arrayListSanPhamChiTiet = new ArrayList<>();

    DefaultComboBoxModel<DoanhMuc> comboBoxModelDoanhMuc = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<String> comboBoxModelDoanhSach = new DefaultComboBoxModel<>(arrDanhSach);
    DefaultComboBoxModel<String> comboBoxModelHinhThucGiamGia = new DefaultComboBoxModel<>(arrHinhThucGiamGia);
    DefaultTableModel tableModelDanhSach;
    DefaultTableModel tableModelKhuyenMai;

    /**
     * Creates new form HoaDon
     */
    public KhuyenMai() {
        initComponents();
        initComboBox();
        initData();
        initTable();
        setting();
        if (arrayListKhuyenMais.size() > 0) {
            tblKhuyenMai.setRowSelectionInterval(0, 0);
            index = tblKhuyenMai.getSelectedRow();
            fillToForm(index);
        }
        cbDoanhMucItemStateChanged(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        popupMenu = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbHinhThuc = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNgayBD = new com.toedter.calendar.JDateChooser();
        txtNgayKT = new com.toedter.calendar.JDateChooser();
        txtMaKm = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTenKM = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtMucGiam = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cbDoanhMuc = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        rdoApDung = new javax.swing.JRadioButton();
        rdoHuyApDung = new javax.swing.JRadioButton();
        btnTaoMoi = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbDanhSach = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKhuyenMai = new javax.swing.JTable();

        popupMenu.setSelected(true);
        popupMenu.setText("jCheckBoxMenuItem1");
        popupMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popupMenuActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popupMenu);

        setBackground(new java.awt.Color(255, 255, 153));

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Mã KM");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Hình thức");

        cbHinhThuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Ngày bắt đầu");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Ngày kết thúc");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Tên KM");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Mức giảm");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Doanh mục");

        cbDoanhMuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbDoanhMuc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDoanhMucItemStateChanged(evt);
            }
        });
        cbDoanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDoanhMucActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Trạng thái");

        rdoApDung.setBackground(new java.awt.Color(255, 255, 153));
        buttonGroup1.add(rdoApDung);
        rdoApDung.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdoApDung.setSelected(true);
        rdoApDung.setText("áp dụng");

        rdoHuyApDung.setBackground(new java.awt.Color(255, 255, 153));
        buttonGroup1.add(rdoHuyApDung);
        rdoHuyApDung.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdoHuyApDung.setText("hủy áp dụng");

        btnTaoMoi.setBackground(new java.awt.Color(204, 153, 0));
        btnTaoMoi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTaoMoi.setText("Tạo");
        btnTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMoiActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(204, 153, 0));
        btnSua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(204, 153, 0));
        btnLamMoi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblDanhSachMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblDanhSach);

        jLabel1.setText("Danh sách");

        cbDanhSach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbDanhSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDanhSachActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbDanhSach, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbDanhSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120)
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(106, 106, 106))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(103, 103, 103)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rdoApDung)
                        .addGap(18, 18, 18)
                        .addComponent(rdoHuyApDung))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(cbHinhThuc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMucGiam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbDoanhMuc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenKM, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaKm, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbDoanhMuc, cbHinhThuc, txtMaKm, txtMucGiam, txtNgayBD, txtNgayKT, txtTenKM});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnLamMoi, btnSua, btnTaoMoi});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(txtMaKm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtTenKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(txtNgayKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cbHinhThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtMucGiam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(cbDoanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(rdoApDung)
                            .addComponent(rdoHuyApDung)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTaoMoi)
                        .addComponent(btnSua))
                    .addComponent(btnLamMoi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Danh sách khuyến mại");

        jPanel3.setBackground(new java.awt.Color(255, 255, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblKhuyenMai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblKhuyenMai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblKhuyenMaiMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblKhuyenMai);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbDanhSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDanhSachActionPerformed
        // TODO add your handling code here:
        if (tmp == -1) {
            System.out.println("+2");

            int indexCurrent = cbDanhSach.getSelectedIndex();
            if (indexCurrent == 0) {
                arrayListSanPhamChiTiet = sanPhamChiTiet_Dao.getAllByDoanhMuc(txtMaKm.getText().trim(), ((DoanhMuc) cbDoanhMuc.getSelectedItem()).getMaDoanhMuc());
                fillDataToTableDanhSach(arrayListSanPhamChiTiet);
            } else {
                arrayListSanPhamChiTiet = sanPhamChiTiet_Dao.getAllInBlackList(txtMaKm.getText(), "");
                fillDataToTableDanhSach(arrayListSanPhamChiTiet);
            }
        }
        System.out.println("+1");
//        if (indexCurrent == 1) {
//            tblDanhSach.getColumnModel().getColumn(4).setHeaderValue("demo");
//            tblDanhSach.getTableHeader().repaint();
//        }
    }//GEN-LAST:event_cbDanhSachActionPerformed

    private void btnTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMoiActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        if (checkInput()) {
            int option = JOptionPane.showConfirmDialog(null, "Tạo khuyến mại chứ", "Thông báo", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {

                Models.KhuyenMai km = getForm();
                int isSuccess = khuyenMai_Dao.addKhuyenMai(km);
                if (isSuccess > 0) {
                    JOptionPane.showMessageDialog(this, "Thêm khuyến mại thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    arrayListKhuyenMais.add(km);
                    tableModelKhuyenMai.addRow(new Object[]{
                        km.getMaKM(), km.getTenKM(), km.isLoaiKM() ? km.getMucGiam() + " %" : km.getMucGiam() + " VNĐ", sdf.format(km.getNgayBD()), sdf.format(km.getNgayKT()), km.getTrangThai() ? "áp dụng" : "hủy áp dụng"
                    });
                    index = arrayListKhuyenMais.size() - 1;
                    tblKhuyenMai.setRowSelectionInterval(index, index);
                    isOn = !isOn;
                    btnLamMoi.setText("Làm mới");
                    disableComponent(btnTaoMoi, txtMaKm);
                    enableComponent(btnSua, tblKhuyenMai);
                    tmp = -1;
                    tblKhuyenMaiMousePressed(null);

                } else {
                    JOptionPane.showMessageDialog(this, "Thêm khuyến mại thất bại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                }
            }

        }

    }//GEN-LAST:event_btnTaoMoiActionPerformed

    private void tblKhuyenMaiMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhuyenMaiMousePressed
        // TODO add your handling code here:
        if (tmp == -1) {
            index = tblKhuyenMai.getSelectedRow();
            try {
                fillToForm(index);

            } catch (Exception e) {
            }
            if (cbDanhSach.getSelectedIndex() == 0) {
                arrayListSanPhamChiTiet = sanPhamChiTiet_Dao.getAllByDoanhMuc(txtMaKm.getText().trim(), ((DoanhMuc) cbDoanhMuc.getSelectedItem()).getMaDoanhMuc());
                fillDataToTableDanhSach(arrayListSanPhamChiTiet);
            } else {
                arrayListSanPhamChiTiet = sanPhamChiTiet_Dao.getAllInBlackList(txtMaKm.getText(), "");
                fillDataToTableDanhSach(arrayListSanPhamChiTiet);

            }
        }
    }//GEN-LAST:event_tblKhuyenMaiMousePressed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        if (tblKhuyenMai.getRowCount() == 0) {
            if (!isOn) {
                clear();
                btnLamMoi.setText("Hủy");
                isOn = !isOn;
                enableComponent(btnTaoMoi);
                disableComponent(btnSua, tblKhuyenMai);
                tableModelDanhSach.setRowCount(0);
                txtMaKm.setText("KM" + (khuyenMai_Dao.getIDKhuyenMai() + 1));

            } else {
                tmp = -1;
                btnLamMoi.setText("Làm mới");
                isOn = !isOn;
                clear();
                disableComponent(btnTaoMoi);
                enableComponent(btnSua, tblKhuyenMai);
                tblKhuyenMaiMousePressed(null);
            }
        } else {
            if (!isOn) {
                tmp = index;
                System.out.println(tmp);
                clear();
                btnLamMoi.setText("Hủy");
                isOn = !isOn;
                tblKhuyenMai.getSelectionModel().clearSelection();
                enableComponent(btnTaoMoi);
                disableComponent(btnSua, tblKhuyenMai);
                tableModelDanhSach.setRowCount(0);
                txtMaKm.setText("KM" + (khuyenMai_Dao.getIDKhuyenMai() + 1));

            } else {
                index = tmp;
                tmp = -1;
                btnLamMoi.setText("Làm mới");
                tblKhuyenMai.setRowSelectionInterval(index, index);
                isOn = !isOn;
                fillToForm(index);
                disableComponent(btnTaoMoi);
                enableComponent(btnSua, tblKhuyenMai);
                tblKhuyenMaiMousePressed(null);

            }
        }
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void cbDoanhMucItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDoanhMucItemStateChanged
        // TODO add your handling code here:
        if (!isOn) {
            try {
                if (cbDoanhMuc.getSelectedItem() != null) {
                    arrayListSanPhamChiTiet = sanPhamChiTiet_Dao.getAllByDoanhMuc(txtMaKm.getText().trim(), ((DoanhMuc) cbDoanhMuc.getSelectedItem()).getMaDoanhMuc());
                    fillDataToTableDanhSach(arrayListSanPhamChiTiet);
                }
            } catch (Exception e) {
            }
        }

    }//GEN-LAST:event_cbDoanhMucItemStateChanged

    private void tblDanhSachMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMouseReleased
        // TODO add your handling code here:
        if (cbDanhSach.getSelectedIndex() == 0) {
            if (evt.isPopupTrigger() && tblDanhSach.getSelectedRow() != -1) {
                popupMenu.setText("Di chuyển vào danh sách đen");
                jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());

            }
        } else {
            if (evt.isPopupTrigger() && tblDanhSach.getSelectedRow() != -1) {
                popupMenu.setText("Loại bỏ khỏi danh sách đen");
                jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());

            }
        }
    }//GEN-LAST:event_tblDanhSachMouseReleased

    private void popupMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupMenuActionPerformed
        // TODO add your handling code here:
        String maSPCT = (String) tblDanhSach.getValueAt(tblDanhSach.getSelectedRow(), 0);
        if (cbDanhSach.getSelectedIndex() == 0) {
            int isSuccess = blackList_Dao.addBlackProduct(maSPCT, txtMaKm.getText(), true);
            System.out.println(isSuccess);
            tableModelDanhSach.removeRow(tblDanhSach.getSelectedRow());
            tblDanhSach.getSelectionModel().clearSelection();

        } else {
            int isSuccess = blackList_Dao.addBlackProduct(maSPCT, txtMaKm.getText(), false);
            System.out.println(isSuccess);
            tableModelDanhSach.removeRow(tblDanhSach.getSelectedRow());
            tblDanhSach.getSelectionModel().clearSelection();

        }

    }//GEN-LAST:event_popupMenuActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if (tblKhuyenMai.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Chưa có dữ liệu ", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (tblKhuyenMai.getSelectedRow() != -1) {
            if (checkInput()) {
                int option = JOptionPane.showConfirmDialog(null, "Chỉnh sửa khuyến mại chứ", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    Models.KhuyenMai km = getForm();
                    int isSuccess = khuyenMai_Dao.updateKhuyenMai(km);
                    if (isSuccess > 0) {
                        JOptionPane.showMessageDialog(this, "Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        arrayListKhuyenMais.get(tblKhuyenMai.getSelectedRow()).setMucGiam(km.getMucGiam());
                        tableModelKhuyenMai.setValueAt(km.getMaKM(), index, 0);
                        tableModelKhuyenMai.setValueAt(km.getTenKM(), index, 1);
                        tableModelKhuyenMai.setValueAt(km.isLoaiKM() ? km.getMucGiam() + " %" : km.getMucGiam() + " VNĐ", index, 2);
                        tableModelKhuyenMai.setValueAt(sdf.format(km.getNgayBD()), index, 3);
                        tableModelKhuyenMai.setValueAt(sdf.format(km.getNgayKT()), index, 4);
                        tableModelKhuyenMai.setValueAt(km.getTrangThai() ? "áp dụng" : "hủy áp dụng", index, 5);
                        cbDanhSachActionPerformed(null);
                    }
                }
            }
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void cbDoanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDoanhMucActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDoanhMucActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTaoMoi;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbDanhSach;
    private javax.swing.JComboBox<String> cbDoanhMuc;
    private javax.swing.JComboBox<String> cbHinhThuc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBoxMenuItem popupMenu;
    private javax.swing.JRadioButton rdoApDung;
    private javax.swing.JRadioButton rdoHuyApDung;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTable tblKhuyenMai;
    private javax.swing.JTextField txtMaKm;
    private javax.swing.JTextField txtMucGiam;
    private com.toedter.calendar.JDateChooser txtNgayBD;
    private com.toedter.calendar.JDateChooser txtNgayKT;
    private javax.swing.JTextField txtTenKM;
    // End of variables declaration//GEN-END:variables
    private void disableComponent(JComponent... components) {
        for (JComponent jComponent : components) {
            jComponent.setEnabled(false);
        }
    }

    private void enableComponent(JComponent... components) {
        for (JComponent jComponent : components) {
            jComponent.setEnabled(true);
        }
    }

    private void initData() {
        arrayListDoanhMucs = doanhMuc_Dao.getAll();
        fillToComboBox(arrayListDoanhMucs, comboBoxModelDoanhMuc);
    }

    private void fillToComboBox(List list, DefaultComboBoxModel comboBoxModel) {
        for (Object object : list) {
            comboBoxModel.addElement(object);
        }
    }

    private void initComboBox() {
        cbDanhSach.setModel((ComboBoxModel) comboBoxModelDoanhSach);
        cbDoanhMuc.setModel((ComboBoxModel) comboBoxModelDoanhMuc);
        cbHinhThuc.setModel(comboBoxModelHinhThucGiamGia);
    }

    private void initTable() {
        String headerKhuyenMai[] = {"Mã KM", "Tên KM", "Mức giảm", "Bắt đầu", "Kết thúc", "Trạng thái"};
        String headerDanhSach[] = {"Mã SPCT", "Tên SPCT", "Giá nhập", "Giá bán", "Giá sau khuyến mại", "Số lượng"};
        tableModelKhuyenMai = new DefaultTableModel(headerKhuyenMai, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }

        };
        tableModelDanhSach = new DefaultTableModel(headerDanhSach, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }

        };
        tblDanhSach.setModel(tableModelDanhSach);
        tblKhuyenMai.setModel(tableModelKhuyenMai);
        fillDataToTableKhuyenMai();
        tblKhuyenMai.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    private void fillDataToTableKhuyenMai() {
        arrayListKhuyenMais = khuyenMai_Dao.getAll();
        tableModelKhuyenMai.setRowCount(0);
        for (Models.KhuyenMai km : arrayListKhuyenMais) {
            tableModelKhuyenMai.addRow(new Object[]{
                km.getMaKM(), km.getTenKM(), km.isLoaiKM() ? km.getMucGiam() + " %" : km.getMucGiam() + " VNĐ", km.getNgayBD(), km.getNgayKT(), km.getTrangThai() ? "áp dụng" : "hủy áp dụng"
            });
        }

    }

    private void fillDataToTableDanhSach(ArrayList<SanPhamChiTiet> list) {
        Models.KhuyenMai khuyenMai = arrayListKhuyenMais.get(tblKhuyenMai.getSelectedRow());
        tableModelDanhSach.setRowCount(0);
        for (SanPhamChiTiet km : list) {
            tableModelDanhSach.addRow(new Object[]{
                km.getMaSPCT(), km.getTenSPCT(), km.getGiaNhap(), km.getGiaBan(), khuyenMai.isLoaiKM() ? km.getGiaBan() - (km.getGiaBan() * (khuyenMai.getMucGiam() / 100)) : km.getGiaBan() - khuyenMai.getMucGiam(), km.getSoLuong()
            });
        }

    }

    private void fillToForm(int index) {
        Models.KhuyenMai km = arrayListKhuyenMais.get(index);
        txtMaKm.setText(km.getMaKM());
        txtTenKM.setText(km.getTenKM());
        txtMucGiam.setText(km.getMucGiam() + "");
        cbHinhThuc.setSelectedIndex(km.isLoaiKM() ? 1 : 0);
        txtNgayBD.setDate(km.getNgayBD());
        txtNgayKT.setDate(km.getNgayKT());
        if (km.getTrangThai()) {
            rdoApDung.setSelected(true);
        } else {
            rdoHuyApDung.setSelected(true);

        }

    }

    private void setting() {
        disableComponent(txtMaKm, btnTaoMoi);
        String formatDate = "dd-MM-yyyy";
        txtNgayBD.setDateFormatString(formatDate);
        txtNgayKT.setDateFormatString(formatDate);

    }

    private void clear() {
        txtMaKm.setText("");
        txtTenKM.setText("");
        txtMucGiam.setText("");
        cbHinhThuc.setSelectedIndex(0);
        txtNgayBD.setDate(new Date());
        txtNgayKT.setDate(new Date(new Date().getTime() + 7 * 60 * 60 * 24 * 1000));
    }

    private Models.KhuyenMai getForm() {
        Models.KhuyenMai km = new Models.KhuyenMai();
        km.setMaKM(txtMaKm.getText());
        km.setTenKM(txtTenKM.getText().trim());
        km.setMucGiam(Double.parseDouble(txtMucGiam.getText().trim()));
        km.setNgayBD(txtNgayBD.getDate());
        km.setNgayKT(txtNgayKT.getDate());
        km.setLoaiKM(cbHinhThuc.getSelectedIndex() == 0 ? false : true);
        km.setTrangThai(rdoApDung.isSelected());
        return km;
    }

    private boolean checkInput() {
        if (txtTenKM.getText().trim().isEmpty() || txtMucGiam.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nhập đủ thông tin", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return false;
        } else if (txtNgayBD.getDate().after(txtNgayKT.getDate())) {
            JOptionPane.showMessageDialog(this, "Ngày diễn ra khuyến mại không hợp lệ", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        String muc = txtMucGiam.getText().trim();
        try {
            double m = Double.parseDouble(muc);
            if (cbHinhThuc.getSelectedIndex() == 1 && m >= 100) {
                JOptionPane.showMessageDialog(this, "Mức giảm giá không hợp lệ", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Mức giảm giá không hợp lệ", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        return true;
    }

    public void changeCard() {
        if (arrayListKhuyenMais.size() > 0) {
            tblKhuyenMai.setRowSelectionInterval(0, 0);
            index = tblKhuyenMai.getSelectedRow();
            fillToForm(index);
        }
    }
}
