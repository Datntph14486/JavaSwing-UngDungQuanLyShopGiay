/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.ChatLieu_DAO;
import DAO.DanhMuc_Dao;
import DAO.Hang_Dao;
import DAO.HinhAnh_DAO;
import DAO.Loai_Dao;
import DAO.Mau_Dao;
import DAO.NoiSanXuat_DAO;
import DAO.SanPham_Dao;
import DAO.Size_DAO;
import Models.ChatLieu;
import Models.DanhMuc;
import Models.Hang;
import Models.HinhAnh;
import Models.LoaiGiay;
import Models.Mau;
import Models.NoiSanXuat;
import Models.SanPham;
import Models.SanPhamBan;
import Models.Size;
import Utils.MsgBox;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.NotFoundException;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import jdk.nashorn.internal.runtime.JSType;

/**
 *
 * @author THINKPAD
 */
public class QlSanPham extends javax.swing.JPanel {

    DefaultComboBoxModel<DanhMuc> cbbDm;
    DefaultComboBoxModel<Mau> cbbmau;
    DefaultComboBoxModel<Hang> cbbhang;
    DefaultComboBoxModel<LoaiGiay> cbbloai;
    DefaultComboBoxModel<Size> cbbsize;
    DefaultComboBoxModel<ChatLieu> cbbchatlieu;
    DefaultComboBoxModel<NoiSanXuat> cbbnoisanxuat;
    DefaultComboBoxModel<HinhAnh> cbbhinhanh;
    DefaultTableModel dtmSanPham;
    DefaultTableModel dtmSanPham1;
    DefaultTableModel dtmThongTinSp;
    DefaultComboBoxModel<DanhMuc> cbbDanhMucL;
    DefaultComboBoxModel<Hang> cbbHangL;
    DefaultComboBoxModel<LoaiGiay> cbbLoaiL;

    DanhMuc_Dao danhMuc_Dao;
    Mau_Dao mau_Dao;
    Hang_Dao hang_Dao;
    Loai_Dao loai_Dao;
    Size_DAO size_DAO;
    ChatLieu_DAO chatLieu_DAO;
    NoiSanXuat_DAO noiSanXuat_DAO;
    HinhAnh_DAO hinhAnh_DAO;
    SanPham_Dao sanPham_Dao;
    String strHinhAnh = null;
    String sttHinhAnh1 = null;

    /**
     * Creates new form SanPham
     */
    public QlSanPham() {
        initComponents();
        cbbDm = (DefaultComboBoxModel) this.cbbDanhMuc.getModel();
        cbbmau = (DefaultComboBoxModel) this.cbbMau.getModel();
        cbbhang = (DefaultComboBoxModel) this.cbbHang.getModel();
        cbbloai = (DefaultComboBoxModel) this.cbbLoai.getModel();
        cbbsize = (DefaultComboBoxModel) this.cbbSize.getModel();
        cbbchatlieu = (DefaultComboBoxModel) this.cbbChatLieu.getModel();
        cbbnoisanxuat = (DefaultComboBoxModel) this.cbbNoiSanXuat.getModel();
        cbbhinhanh = (DefaultComboBoxModel) this.cbbHinhAnh.getModel();
        dtmSanPham = (DefaultTableModel) this.tblSanPham.getModel();
        dtmSanPham1 = (DefaultTableModel) this.tblSanPham1.getModel();
        dtmThongTinSp = (DefaultTableModel) this.tblThongTinSp.getModel();
        cbbDanhMucL = (DefaultComboBoxModel) this.cbbDanhMucLOc.getModel();
        cbbHangL = (DefaultComboBoxModel) this.cbbHangLoc.getModel();
        cbbLoaiL = (DefaultComboBoxModel) this.cbbLoaiLoc.getModel();
        danhMuc_Dao = new DanhMuc_Dao();
        mau_Dao = new Mau_Dao();
        hang_Dao = new Hang_Dao();
        loai_Dao = new Loai_Dao();
        size_DAO = new Size_DAO();
        chatLieu_DAO = new ChatLieu_DAO();
        noiSanXuat_DAO = new NoiSanXuat_DAO();
        hinhAnh_DAO = new HinhAnh_DAO();
        sanPham_Dao = new SanPham_Dao();
        rdoConHang.setSelected(true);

        LoadDanhMuc();
        LoadMau();
        LoadHang();
        LoadLoai();
        LoadSize();
        LoadChatLieu();
        LOadNoiSx();
        LoadHinhAnh();
        LoadTable();
        loadTable1();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTenSp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaSp = new javax.swing.JTextField();
        txtGiaBan = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        txtGiaNhap = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        rdoConHang = new javax.swing.JRadioButton();
        rdoHetHang = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        cbbDanhMuc = new javax.swing.JComboBox<>();
        cbbMau = new javax.swing.JComboBox<>();
        cbbHang = new javax.swing.JComboBox<>();
        cbbLoai = new javax.swing.JComboBox<>();
        cbbSize = new javax.swing.JComboBox<>();
        cbbChatLieu = new javax.swing.JComboBox<>();
        cbbHinhAnh = new javax.swing.JComboBox<>();
        cbbNoiSanXuat = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        panelAnh = new javax.swing.JPanel();
        lblHinhAnh = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cbbDanhMucLOc = new javax.swing.JComboBox<>();
        cbbHangLoc = new javax.swing.JComboBox<>();
        cbbLoaiLoc = new javax.swing.JComboBox<>();
        btnLoc = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblSanPham1 = new javax.swing.JTable();
        btnAddHang = new javax.swing.JButton();
        btnAddHinhAnh = new javax.swing.JButton();
        btnAddMau = new javax.swing.JButton();
        btnAddLoai = new javax.swing.JButton();
        btnAddSize = new javax.swing.JButton();
        btnAddChatLieu = new javax.swing.JButton();
        btnAddNsx = new javax.swing.JButton();
        btnAddDanhmuc = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txtTenThongTin = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        rdoDanhMuc = new javax.swing.JRadioButton();
        rdoMau = new javax.swing.JRadioButton();
        rdoHang = new javax.swing.JRadioButton();
        rdoLoai = new javax.swing.JRadioButton();
        rdoNoiSanXuat = new javax.swing.JRadioButton();
        rdoChatLieu = new javax.swing.JRadioButton();
        rdoSize = new javax.swing.JRadioButton();
        rdoHinhAnh = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        lblHinhAnh1 = new javax.swing.JLabel();
        btnThemThongTin = new javax.swing.JButton();
        btnCapNhatThongTin = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblThongTinSp = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtMaThongTin = new javax.swing.JTextField();

        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem4.setText("jMenuItem4");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem4);

        jMenuItem2.setText("jMenuItem2");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jMenuItem2);

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 900));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 153));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1200, 900));

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 900));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Mã Sản Phẩm :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Tên :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Gía Bán :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Gía Nhập :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Số Lượng :");

        txtMaSp.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Mô Tả :");

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        jScrollPane1.setViewportView(txtMoTa);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Trạng Thái :");

        buttonGroup1.add(rdoConHang);
        rdoConHang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoConHang.setText("Còn Hàng");

        buttonGroup1.add(rdoHetHang);
        rdoHetHang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoHetHang.setText("Hết Hàng");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Danh mục :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Màu :");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Hãng :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Loại :");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Size :");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Chất liệu :");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Nơi Sản Xuất :");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Hình ảnh :");

        cbbDanhMuc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbDanhMucItemStateChanged(evt);
            }
        });
        cbbDanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbDanhMucActionPerformed(evt);
            }
        });

        cbbHinhAnh.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbHinhAnhItemStateChanged(evt);
            }
        });
        cbbHinhAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbHinhAnhActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        panelAnh.setLayout(new java.awt.GridLayout(1, 0));

        lblHinhAnh.setBackground(new java.awt.Color(255, 255, 255));
        lblHinhAnh.setText("Hình ảnh");
        panelAnh.add(lblHinhAnh);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
        );

        btnThem.setBackground(new java.awt.Color(204, 153, 0));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(204, 153, 0));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Gear.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(204, 153, 0));
        btnLamMoi.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Refresh.png"))); // NOI18N
        btnLamMoi.setText("Làm Mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setText("Danh mục :");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("Hãng :");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setText("Loại :");

        cbbDanhMucLOc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbDanhMucLOcItemStateChanged(evt);
            }
        });
        cbbDanhMucLOc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbDanhMucLOcActionPerformed(evt);
            }
        });

        cbbHangLoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbHangLocItemStateChanged(evt);
            }
        });
        cbbHangLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbHangLocActionPerformed(evt);
            }
        });

        cbbLoaiLoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbLoaiLocItemStateChanged(evt);
            }
        });
        cbbLoaiLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLoaiLocActionPerformed(evt);
            }
        });

        btnLoc.setBackground(new java.awt.Color(204, 153, 0));
        btnLoc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Search.png"))); // NOI18N
        btnLoc.setText("Lọc");
        btnLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(cbbLoaiLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbDanhMucLOc, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbHangLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                        .addComponent(btnLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(cbbDanhMucLOc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(cbbHangLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLoc))
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbLoaiLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.setBackground(new java.awt.Color(153, 255, 255));

        tblSanPham.setBackground(new java.awt.Color(204, 255, 255));
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MaSp", "TenSp", "GiaBan", "GiaNhap", "SoLuong", "DanhMuc", "Mau", "Hang", "Loai", "Size", "ChatLieu", "NơiSx", "HinhAnh", "MoTa", "TinhTrang"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1187, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Hàng Còn", jPanel8);

        tblSanPham1.setBackground(new java.awt.Color(204, 255, 255));
        tblSanPham1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MaSp", "TenSp", "GiaBan", "GiaNhap", "SoLuong", "DanhMuc", "Mau", "Hang", "Loai", "Size", "ChatLieu", "NơiSx", "HinhAnh", "MoTa", "TinhTrang"
            }
        ));
        tblSanPham1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPham1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSanPham1MouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tblSanPham1);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1187, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Hàng hết", jPanel9);

        btnAddHang.setBackground(new java.awt.Color(204, 153, 0));
        btnAddHang.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddHang.setText("+");
        btnAddHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHangActionPerformed(evt);
            }
        });

        btnAddHinhAnh.setBackground(new java.awt.Color(204, 153, 0));
        btnAddHinhAnh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddHinhAnh.setText("+");
        btnAddHinhAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHinhAnhActionPerformed(evt);
            }
        });

        btnAddMau.setBackground(new java.awt.Color(204, 153, 0));
        btnAddMau.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddMau.setText("+");
        btnAddMau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMauActionPerformed(evt);
            }
        });

        btnAddLoai.setBackground(new java.awt.Color(204, 153, 0));
        btnAddLoai.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddLoai.setText("+");
        btnAddLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLoaiActionPerformed(evt);
            }
        });

        btnAddSize.setBackground(new java.awt.Color(204, 153, 0));
        btnAddSize.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddSize.setForeground(new java.awt.Color(0, 51, 51));
        btnAddSize.setText("+");
        btnAddSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSizeActionPerformed(evt);
            }
        });

        btnAddChatLieu.setBackground(new java.awt.Color(204, 153, 0));
        btnAddChatLieu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddChatLieu.setText("+");
        btnAddChatLieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddChatLieuActionPerformed(evt);
            }
        });

        btnAddNsx.setBackground(new java.awt.Color(204, 153, 0));
        btnAddNsx.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddNsx.setText("+");
        btnAddNsx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNsxActionPerformed(evt);
            }
        });

        btnAddDanhmuc.setBackground(new java.awt.Color(204, 153, 0));
        btnAddDanhmuc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddDanhmuc.setText("+");
        btnAddDanhmuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDanhmucActionPerformed(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(204, 153, 0));
        btnTimKiem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Search.png"))); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel1)
                                                .addComponent(jLabel3))
                                            .addGap(26, 26, 26)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtMaSp, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                                .addComponent(txtTenSp)
                                                .addComponent(txtGiaBan))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGap(65, 65, 65)
                                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(86, 86, 86))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(68, 68, 68)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(rdoConHang)
                                                .addGap(18, 18, 18)
                                                .addComponent(rdoHetHang))
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(jLabel8)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel11)
                                                .addComponent(jLabel9)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel12)
                                                .addComponent(jLabel13)
                                                .addComponent(jLabel14)
                                                .addComponent(jLabel15))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(btnLamMoi)
                                                .addGap(33, 33, 33)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(46, 46, 46)
                                        .addComponent(btnTimKiem))
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbbHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAddHinhAnh))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbbDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAddDanhmuc))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbbMau, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAddMau))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbbHang, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAddHang))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAddLoai))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbbSize, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAddSize))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbbChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAddChatLieu))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbbNoiSanXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAddNsx)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtMaSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(cbbDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddDanhmuc))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTenSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(cbbMau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddMau))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(cbbHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddHang))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAddLoai))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(cbbSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAddSize))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel13)
                                            .addComponent(cbbChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnAddChatLieu))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel14)
                                            .addComponent(cbbNoiSanXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnAddNsx))
                                        .addGap(28, 28, 28)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cbbHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAddHinhAnh)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(rdoConHang)
                            .addComponent(rdoHetHang)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnSua)
                            .addComponent(btnLamMoi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("SanPham", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setPreferredSize(new java.awt.Dimension(1200, 900));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Tên Sản Phẩm :");

        jPanel6.setBackground(new java.awt.Color(255, 255, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        buttonGroup1.add(rdoDanhMuc);
        rdoDanhMuc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoDanhMuc.setText("Danh Mục");
        rdoDanhMuc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdoDanhMucItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rdoMau);
        rdoMau.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoMau.setText("Màu sắc");
        rdoMau.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdoMauItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rdoHang);
        rdoHang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoHang.setText("Hãng");
        rdoHang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdoHangItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rdoLoai);
        rdoLoai.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoLoai.setText("Loại");
        rdoLoai.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdoLoaiItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rdoNoiSanXuat);
        rdoNoiSanXuat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoNoiSanXuat.setText("Nơi Sản Xuất");
        rdoNoiSanXuat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdoNoiSanXuatItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rdoChatLieu);
        rdoChatLieu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoChatLieu.setText("Chất Liệu");
        rdoChatLieu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdoChatLieuItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rdoSize);
        rdoSize.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoSize.setText("Size");
        rdoSize.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdoSizeItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rdoHinhAnh);
        rdoHinhAnh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoHinhAnh.setText("Hình ảnh");
        rdoHinhAnh.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdoHinhAnhItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdoDanhMuc)
                    .addComponent(rdoSize))
                .addGap(45, 45, 45)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdoChatLieu)
                    .addComponent(rdoMau))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdoNoiSanXuat)
                    .addComponent(rdoHang))
                .addGap(40, 40, 40)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdoLoai)
                    .addComponent(rdoHinhAnh))
                .addGap(18, 18, 18))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoDanhMuc)
                    .addComponent(rdoLoai)
                    .addComponent(rdoHang)
                    .addComponent(rdoMau))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoHinhAnh)
                    .addComponent(rdoSize)
                    .addComponent(rdoNoiSanXuat)
                    .addComponent(rdoChatLieu))
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        lblHinhAnh1.setText("Hình ảnh");
        lblHinhAnh1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhAnh1MouseClicked(evt);
            }
        });
        jPanel7.add(lblHinhAnh1);

        btnThemThongTin.setBackground(new java.awt.Color(204, 153, 0));
        btnThemThongTin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThemThongTin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Add.png"))); // NOI18N
        btnThemThongTin.setText("Thêm");
        btnThemThongTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemThongTinActionPerformed(evt);
            }
        });

        btnCapNhatThongTin.setBackground(new java.awt.Color(204, 153, 0));
        btnCapNhatThongTin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCapNhatThongTin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Gear.png"))); // NOI18N
        btnCapNhatThongTin.setText("Cập nhật");
        btnCapNhatThongTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatThongTinActionPerformed(evt);
            }
        });

        jButton15.setBackground(new java.awt.Color(204, 153, 0));
        jButton15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Delete.png"))); // NOI18N
        jButton15.setText("Xóa");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        tblThongTinSp.setBackground(new java.awt.Color(204, 255, 255));
        tblThongTinSp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ma", "Tên"
            }
        ));
        tblThongTinSp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTinSpMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblThongTinSp);

        jLabel21.setText("Danh Sách Thông Tin sản Phẩm");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel22.setText("Mã :");

        txtMaThongTin.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel21)
                .addContainerGap(993, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnThemThongTin)
                        .addGap(78, 78, 78)
                        .addComponent(btnCapNhatThongTin)
                        .addGap(113, 113, 113)
                        .addComponent(jButton15))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel20)
                            .addGap(18, 18, 18)
                            .addComponent(txtTenThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(45, 45, 45)
                            .addComponent(jLabel22)
                            .addGap(18, 18, 18)
                            .addComponent(txtMaThongTin))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(txtTenThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(txtMaThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThemThongTin)
                            .addComponent(btnCapNhatThongTin)
                            .addComponent(jButton15)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("ThongTinSanPham", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbbDanhMucItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbDanhMucItemStateChanged


    }//GEN-LAST:event_cbbDanhMucItemStateChanged

    private void cbbDanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbDanhMucActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbDanhMucActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

        if (check() == true && checkDinhDang()) {
            int add = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn thêm", "Thông Báo", JOptionPane.YES_OPTION, WIDTH);
            if (add == 0) {

                String MaSp = txtMaSp.getText();
                String TenSp = txtTenSp.getText();
                Float GiaBan = Float.parseFloat(txtGiaBan.getText());
                Float GiaNhap = Float.parseFloat(txtGiaNhap.getText());

                int SoLuong = Integer.parseInt(txtSoLuong.getText());
                String Mota = txtMoTa.getText();
                Boolean ConHang = this.rdoConHang.isSelected();
                int tinhtrang = 0;
                if (ConHang == true) {
                    tinhtrang = 1;
                } else {
                    tinhtrang = 0;
                }
                DanhMuc dm = (DanhMuc) cbbDm.getSelectedItem();
                Mau mau = (Mau) cbbmau.getSelectedItem();
                Hang hang = (Hang) cbbhang.getSelectedItem();
                LoaiGiay loaigiay = (LoaiGiay) cbbloai.getSelectedItem();
                Size size = (Size) cbbsize.getSelectedItem();
                ChatLieu chatlieu = (ChatLieu) cbbchatlieu.getSelectedItem();
                NoiSanXuat nsx = (NoiSanXuat) cbbnoisanxuat.getSelectedItem();
                HinhAnh hinhanh = (HinhAnh) cbbhinhanh.getSelectedItem();
                SanPham sp = new SanPham(MaSp, TenSp, Mota, GiaBan, GiaNhap, 0, SoLuong, tinhtrang, dm.getMaDanhMuc(), size.getMaSize(), mau.getMaMau(), chatlieu.getMaChatLieu(), hang.getMaHang(), loaigiay.getMaLoai(), nsx.getMaNoiSanXuat(), hinhanh.getMaHinhAnh());
                System.out.println(sp);
                sanPham_Dao.Add(sp);
                LoadTable();
                loadTable1();
            }

        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void rdoDanhMucItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdoDanhMucItemStateChanged
        if (rdoDanhMuc.isSelected() == true) {
            newThongTin();
            LoadTableDanhMuc();
        } else {
            dtmThongTinSp.setRowCount(0);
        }

    }//GEN-LAST:event_rdoDanhMucItemStateChanged

    private void rdoMauItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdoMauItemStateChanged
        if (rdoMau.isSelected() == true) {
            newThongTin();
            ArrayList<Mau> listDm = mau_Dao.all();
            dtmThongTinSp.setRowCount(0);
            for (Mau m : listDm) {
                dtmThongTinSp.addRow(new Object[]{m.getMaMau(), m.getTenMau()});

            }
        } else {
            dtmThongTinSp.setRowCount(0);
        }
    }//GEN-LAST:event_rdoMauItemStateChanged

    private void rdoHangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdoHangItemStateChanged
        if (rdoHang.isSelected() == true) {
            newThongTin();
            ArrayList<Hang> listDm = hang_Dao.all();
            dtmThongTinSp.setRowCount(0);
            for (Hang h : listDm) {
                dtmThongTinSp.addRow(new Object[]{h.getMaHang(), h.getTenHang()});

            }
        } else {
            dtmThongTinSp.setRowCount(0);
        }
    }//GEN-LAST:event_rdoHangItemStateChanged

    private void rdoLoaiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdoLoaiItemStateChanged
        if (rdoLoai.isSelected() == true) {
            newThongTin();
            ArrayList<LoaiGiay> listDm = loai_Dao.all();
            dtmThongTinSp.setRowCount(0);
            for (LoaiGiay l : listDm) {
                dtmThongTinSp.addRow(new Object[]{l.getMaLoai(), l.getTenLoai()});

            }
        } else {
            dtmThongTinSp.setRowCount(0);
        }
    }//GEN-LAST:event_rdoLoaiItemStateChanged

    private void rdoSizeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdoSizeItemStateChanged
        if (rdoSize.isSelected() == true) {
            newThongTin();
            ArrayList<Size> listDm = size_DAO.all();
            dtmThongTinSp.setRowCount(0);
            for (Size s : listDm) {
                dtmThongTinSp.addRow(new Object[]{s.getMaSize(), s.getSoSize()});

            }
        } else {
            dtmThongTinSp.setRowCount(0);
        }

    }//GEN-LAST:event_rdoSizeItemStateChanged

    private void rdoChatLieuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdoChatLieuItemStateChanged
        if (rdoChatLieu.isSelected() == true) {
            newThongTin();
            ArrayList<ChatLieu> listDm = chatLieu_DAO.all();
            dtmThongTinSp.setRowCount(0);
            for (ChatLieu c : listDm) {
                dtmThongTinSp.addRow(new Object[]{c.getMaChatLieu(), c.getTenChatLieu()});

            }
        } else {
            dtmThongTinSp.setRowCount(0);
        }
    }//GEN-LAST:event_rdoChatLieuItemStateChanged

    private void rdoNoiSanXuatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdoNoiSanXuatItemStateChanged
        if (rdoNoiSanXuat.isSelected() == true) {
            newThongTin();
            ArrayList<NoiSanXuat> listDm = noiSanXuat_DAO.all();
            dtmThongTinSp.setRowCount(0);
            for (NoiSanXuat n : listDm) {
                dtmThongTinSp.addRow(new Object[]{n.getMaNoiSanXuat(), n.getTenNoiSanXuat()});

            }
        } else {
            dtmThongTinSp.setRowCount(0);
        }
    }//GEN-LAST:event_rdoNoiSanXuatItemStateChanged

    private void tblThongTinSpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTinSpMouseClicked
        int index = this.tblThongTinSp.getSelectedRow();
        txtMaThongTin.setText(dtmThongTinSp.getValueAt(index, 0).toString());
        txtTenThongTin.setText(dtmThongTinSp.getValueAt(index, 1).toString());

        String HinhAnh = dtmThongTinSp.getValueAt(index, 1).toString();
        lblHinhAnh1.setText("");
        ImageIcon icon = new ImageIcon("src/Images/" + HinhAnh);
        Image image = icon.getImage();
        strHinhAnh = HinhAnh;
        lblHinhAnh1.setIcon(new ImageIcon(image.getScaledInstance(lblHinhAnh1.getWidth(), lblHinhAnh1.getHeight(), 0)));
    }//GEN-LAST:event_tblThongTinSpMouseClicked

    private void btnThemThongTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemThongTinActionPerformed
        if (checkThongtin() == true) {
            int add = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn thêm", "Thông Báo", JOptionPane.YES_NO_OPTION, WIDTH);
            if (add == 0) {
                String Ten = txtTenThongTin.getText();

                if (rdoDanhMuc.isSelected() == true) {
                    DanhMuc dm = new DanhMuc(Ten, 0);
                    danhMuc_Dao.Add(dm);
                    LoadTableDanhMuc();
                    newThongTin();
                    LoadDanhMuc();
                }
                if (rdoMau.isSelected() == true) {
                    Mau m = new Mau(Ten, 0);
                    mau_Dao.Add(m);
                    loadTableMau();
                    newThongTin();
                    LoadMau();
                }
                if (rdoHang.isSelected() == true) {
                    Hang hang = new Hang(Ten, 0);
                    hang_Dao.Add(hang);
                    loadTableHang();
                    newThongTin();
                    LoadHang();
                }
                if (rdoLoai.isSelected() == true) {
                    LoaiGiay loaiGiay = new LoaiGiay(Ten, 0);
                    loai_Dao.Add(loaiGiay);
                    newThongTin();
                    loadTableLoai();
                    LoadLoai();
                }
                if (rdoSize.isSelected() == true) {
                    if (isNumeric(Ten)) {
                        Size size = new Size(0, Integer.parseInt(Ten));
                        size_DAO.Add(size);
                        newThongTin();
                        loadtableSize();
                        LoadSize();
                    } else {
                        JOptionPane.showMessageDialog(this, "Size dạng số");
                    }

                }
                if (rdoChatLieu.isSelected() == true) {
                    ChatLieu chatLieu = new ChatLieu(Ten, 0);
                    chatLieu_DAO.Add(chatLieu);
                    loadTableChatlieu();
                    newThongTin();
                    LoadChatLieu();
                }
                if (rdoNoiSanXuat.isSelected() == true) {
                    NoiSanXuat nsx = new NoiSanXuat(Ten, 0);
                    noiSanXuat_DAO.Add(nsx);
                    loadTableNSX();
                    newThongTin();
                    LOadNoiSx();
                }
                if (rdoHinhAnh.isSelected() == true) {
                    HinhAnh hinhAnh = new HinhAnh(Ten, 0);
                    hinhAnh_DAO.Add(hinhAnh);
                    loadTableAnh();
                    newThongTin();
                    LoadHinhAnh();
                }
            }
        }


    }//GEN-LAST:event_btnThemThongTinActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        int index = this.tblSanPham.getSelectedRow();
        if (index == -1) {
            return;
        }
        txtMaSp.setText(dtmSanPham.getValueAt(index, 0).toString());
        txtTenSp.setText(dtmSanPham.getValueAt(index, 1).toString());
        txtGiaBan.setText(dtmSanPham.getValueAt(index, 2).toString());
        txtGiaNhap.setText(dtmSanPham.getValueAt(index, 3).toString());
        txtSoLuong.setText(dtmSanPham.getValueAt(index, 4).toString());
        String danhmuc = dtmSanPham.getValueAt(index, 5).toString();

        formDanhMuc(danhmuc);
        String mau = dtmSanPham.getValueAt(index, 6).toString();
        formMau(mau);
        String hang = dtmSanPham.getValueAt(index, 7).toString();
        formHang(hang);
        String loai = dtmSanPham.getValueAt(index, 8).toString();
        formLoai(loai);
        int size = Integer.parseInt(dtmSanPham.getValueAt(index, 9).toString());
        formSize(size);
        String chatlieu = dtmSanPham.getValueAt(index, 10).toString();
        Formchatlieu(chatlieu);
        String nsx = dtmSanPham.getValueAt(index, 11).toString();
        formNoisanxuat(nsx);
        String HinhAnh = dtmSanPham.getValueAt(index, 12).toString();
        formAnh(HinhAnh);

        String mota = dtmSanPham.getValueAt(index, 13).toString();
        String tinhtrang = dtmSanPham.getValueAt(index, 14).toString();
        System.out.println(HinhAnh);
        txtMoTa.setText(mota);
        if (tinhtrang.equals('0')) {
            rdoHetHang.setSelected(true);

        } else {
            rdoConHang.setSelected(true);
        }


    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void cbbHinhAnhItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbHinhAnhItemStateChanged
        HinhAnh ha = (HinhAnh) cbbhinhanh.getSelectedItem();
        if (ha == null) {

        } else {
            loadAnh();
        }


    }//GEN-LAST:event_cbbHinhAnhItemStateChanged

    private void cbbDanhMucLOcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbDanhMucLOcActionPerformed


    }//GEN-LAST:event_cbbDanhMucLOcActionPerformed

    private void cbbHangLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbHangLocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbHangLocActionPerformed

    private void cbbLoaiLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLoaiLocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbLoaiLocActionPerformed

    private void cbbDanhMucLOcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbDanhMucLOcItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_cbbDanhMucLOcItemStateChanged

    private void cbbHangLocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbHangLocItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_cbbHangLocItemStateChanged

    private void cbbLoaiLocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbLoaiLocItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_cbbLoaiLocItemStateChanged

    private void rdoHinhAnhItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdoHinhAnhItemStateChanged
        if (rdoHinhAnh.isSelected() == true) {
            newThongTin();
            ArrayList<HinhAnh> listAnh = hinhAnh_DAO.all();
            dtmThongTinSp.setRowCount(0);
            for (HinhAnh a : listAnh) {
                dtmThongTinSp.addRow(new Object[]{a.getMaHinhAnh(), a.getTenHinhAnh()});

            }

        } else {
            lblHinhAnh1.setIcon(null);
        }
    }//GEN-LAST:event_rdoHinhAnhItemStateChanged

    private void lblHinhAnh1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhAnh1MouseClicked
        // TODO add your handling code here:
        if (rdoHinhAnh.isSelected() == true) {
            try {
                JFileChooser jfc = new JFileChooser("C:\\DuAn1\\DuAn1_new\\DuAn1_Nhom686_GiayTeddy\\src\\Images");

                FileFilter filter = new FileNameExtensionFilter("Image file", ImageIO.getReaderFileSuffixes());
                jfc.setFileFilter(filter);

                int chooser = jfc.showOpenDialog(this);
                if (chooser == JFileChooser.APPROVE_OPTION) {
                    File file = jfc.getSelectedFile();
                    Image img = ImageIO.read(file);
                    String anh = file.getName();
                    txtTenThongTin.setText(anh);
                    ImageIcon icon = new ImageIcon("src/Images/" + anh);
                    Image image = icon.getImage();

                    lblHinhAnh1.setIcon(new ImageIcon(image.getScaledInstance(lblHinhAnh1.getWidth(), lblHinhAnh1.getHeight(), 0)));
                } else {

                }
            } catch (IOException ex) {
                Logger.getLogger(QlSanPham.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_lblHinhAnh1MouseClicked

    private void tblSanPham1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPham1MouseClicked
        // TODO add your handling code here:
        int index = this.tblSanPham1.getSelectedRow();
        if (index == -1) {
            return;
        }
        txtMaSp.setText(dtmSanPham1.getValueAt(index, 0).toString());
        txtTenSp.setText(dtmSanPham1.getValueAt(index, 1).toString());
        txtGiaBan.setText(dtmSanPham1.getValueAt(index, 2).toString());
        txtGiaNhap.setText(dtmSanPham1.getValueAt(index, 3).toString());
        txtSoLuong.setText(dtmSanPham1.getValueAt(index, 4).toString());
        String danhmuc = dtmSanPham1.getValueAt(index, 5).toString();
        formDanhMuc(danhmuc);

        String mau = dtmSanPham1.getValueAt(index, 6).toString();
        formMau(mau);
        String hang = dtmSanPham1.getValueAt(index, 7).toString();
        formHang(hang);
        String loai = dtmSanPham1.getValueAt(index, 8).toString();
        formLoai(loai);
        int size = Integer.parseInt(dtmSanPham1.getValueAt(index, 9).toString());
        formSize(size);
        String chatlieu = dtmSanPham1.getValueAt(index, 10).toString();
        Formchatlieu(chatlieu);
        String nsx = dtmSanPham1.getValueAt(index, 11).toString();
        formNoisanxuat(nsx);
        String HinhAnh = dtmSanPham1.getValueAt(index, 12).toString();
        formAnh(HinhAnh);

        String mota = dtmSanPham1.getValueAt(index, 13).toString();
        String tinhtrang = dtmSanPham1.getValueAt(index, 14).toString();
        System.out.println(HinhAnh);
        txtMoTa.setText(mota);
        if (tinhtrang.equals('0')) {
            rdoHetHang.setSelected(true);

        } else {
            rdoConHang.setSelected(true);
        }


    }//GEN-LAST:event_tblSanPham1MouseClicked

    private void btnCapNhatThongTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatThongTinActionPerformed
        if (checkThongtin() == true) {
            int index = tblThongTinSp.getSelectedRow();
            if (index == -1) {
                return;
            }
            int update = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn sửa", "Thông Báo", JOptionPane.YES_NO_OPTION, WIDTH);
            if (update == 0) {

                String Ten = txtTenThongTin.getText();
                int ma = Integer.parseInt(txtMaThongTin.getText());
                if (rdoDanhMuc.isSelected() == true) {
                    DanhMuc dm = new DanhMuc(Ten, ma);
                    danhMuc_Dao.Update(dm);
                    LoadTableDanhMuc();
                    LoadDanhMuc();
                    newThongTin();;

                }
                if (rdoMau.isSelected() == true) {
                    Mau m = new Mau(Ten, ma);
                    mau_Dao.Update(m);
                    loadTableMau();
                    LoadMau();
                    newThongTin();;
                }
                if (rdoHang.isSelected() == true) {
                    Hang hang = new Hang(Ten, ma);
                    hang_Dao.Update(hang);
                    loadTableHang();
                    LoadHang();
                    newThongTin();;
                }
                if (rdoLoai.isSelected() == true) {
                    LoaiGiay loaiGiay = new LoaiGiay(Ten, ma);
                    loai_Dao.Update(loaiGiay);
                    loadTableLoai();
                    LoadLoai();
                    newThongTin();;
                }
                if (rdoSize.isSelected() == true) {
                    Size size = new Size(ma, Integer.parseInt(Ten));
                    size_DAO.Update(size);
                    loadtableSize();
                    newThongTin();;
                    LoadSize();;
                }
                if (rdoChatLieu.isSelected() == true) {
                    ChatLieu chatLieu = new ChatLieu(Ten, ma);
                    chatLieu_DAO.Update(chatLieu);
                    loadTableChatlieu();
                    newThongTin();;
                    LoadChatLieu();
                }
                if (rdoNoiSanXuat.isSelected() == true) {
                    NoiSanXuat nsx = new NoiSanXuat(Ten, ma);
                    noiSanXuat_DAO.Update(nsx);
                    newThongTin();;
                    loadTableNSX();
                    LOadNoiSx();
                }
                if (rdoHinhAnh.isSelected() == true) {
                    HinhAnh hinhAnh = new HinhAnh(Ten, ma);
                    hinhAnh_DAO.Update(hinhAnh);
                    newThongTin();;
                    loadTableAnh();
                    LoadAnh();
                }
            }
        }


    }//GEN-LAST:event_btnCapNhatThongTinActionPerformed

    private void btnLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocActionPerformed
        // TODO add your handling code here:
        DanhMuc dm = (DanhMuc) cbbDanhMucL.getSelectedItem();
        Hang h = (Hang) cbbHangL.getSelectedItem();
        LoaiGiay lg = (LoaiGiay) cbbLoaiL.getSelectedItem();
        ArrayList<SanPhamBan> listSp = sanPham_Dao.selectLoc(dm.getMaDanhMuc(), h.getMaHang(), lg.getMaLoai());

        dtmSanPham.setRowCount(0);
        for (SanPhamBan sp : listSp) {
            dtmSanPham.addRow(new Object[]{sp.getMaSp(), sp.getTenSp(), sp.getGiaTien(), sp.getGiaNhap(), sp.getSoLuong(), sp.getTenDanhMuc(), sp.getTenMau(), sp.getTenHnag(), sp.getTenLoai(), sp.getSoSize(), sp.getTenChatLieu(), sp.getTenNSX(), sp.getTenHinhAnh(), sp.getMoTa(), sp.getTrangThai()});

        }
    }//GEN-LAST:event_btnLocActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:

        txtGiaBan.setText("");
        txtGiaNhap.setText("");
        txtMaSp.setText("");
        txtMoTa.setText("");
        txtSoLuong.setText("");
        txtTenSp.setText("");
        lblHinhAnh.setIcon(null);
        txtTimKiem.setText("");
        LoadDanhMuc();
        LoadHang();
        LoadChatLieu();
        LoadHinhAnh();
        LoadLoai();
        LoadMau();
        LoadSize();
        LOadNoiSx();
        LoadTable();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int update = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn sửa", "Thông Báo", JOptionPane.YES_NO_OPTION, WIDTH);
        if (update == 0 && checkDinhDang()) {

            if (check() == true) {
                int intdex = tblSanPham.getSelectedRow();
                if (intdex == -1) {
                    return;
                } else {
                    String MaSp = txtMaSp.getText();
                    String TenSp = txtTenSp.getText();
                    Float GiaBan = Float.parseFloat(txtGiaBan.getText());
                    Float GiaNhap = Float.parseFloat(txtGiaNhap.getText());

                    int SoLuong = Integer.parseInt(txtSoLuong.getText());
                    String Mota = txtMoTa.getText();
                    Boolean ConHang = this.rdoConHang.isSelected();
                    int tinhtrang = 0;
                    if (ConHang == true) {
                        tinhtrang = 1;
                    } else {
                        tinhtrang = 0;
                    }
                    DanhMuc dm = (DanhMuc) cbbDm.getSelectedItem();
                    Mau mau = (Mau) cbbmau.getSelectedItem();
                    Hang hang = (Hang) cbbhang.getSelectedItem();
                    LoaiGiay loaigiay = (LoaiGiay) cbbloai.getSelectedItem();
                    Size size = (Size) cbbsize.getSelectedItem();
                    ChatLieu chatlieu = (ChatLieu) cbbchatlieu.getSelectedItem();
                    NoiSanXuat nsx = (NoiSanXuat) cbbnoisanxuat.getSelectedItem();
                    HinhAnh hinhanh = (HinhAnh) cbbhinhanh.getSelectedItem();
                    SanPham sp = new SanPham(MaSp, TenSp, Mota, GiaBan, GiaNhap, 0, SoLuong, tinhtrang, dm.getMaDanhMuc(), size.getMaSize(), mau.getMaMau(), chatlieu.getMaChatLieu(), hang.getMaHang(), loaigiay.getMaLoai(), nsx.getMaNoiSanXuat(), hinhanh.getMaHinhAnh());

                    sanPham_Dao.Update(sp);
                    LoadTable();
                    loadTable1();
                }

            }

        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        if (checkThongtin() == true) {
            int index = tblThongTinSp.getSelectedRow();
            if (index == -1) {
                return;
            }
            int delete = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xóa", "Thông Báo", JOptionPane.YES_NO_OPTION, WIDTH);
            if (delete == 0) {
                String Ten = txtTenThongTin.getText();
                int ma = Integer.parseInt(txtMaThongTin.getText());
                if (rdoDanhMuc.isSelected() == true) {

                    danhMuc_Dao.Delete(ma);
                    LoadTableDanhMuc();
                    LoadDanhMuc();
                    newThongTin();;

                }
                if (rdoMau.isSelected() == true) {

                    mau_Dao.Delete(ma);
                    loadTableMau();
                    LoadMau();
                    newThongTin();;
                }
                if (rdoHang.isSelected() == true) {

                    hang_Dao.Delete(ma);
                    loadTableHang();
                    newThongTin();;
                    LoadHang();
                }
                if (rdoLoai.isSelected() == true) {

                    loai_Dao.Delete(ma);
                    loadTableLoai();
                    newThongTin();;
                    LoadLoai();
                }
                if (rdoSize.isSelected() == true) {

                    size_DAO.Delete(ma);
                    loadtableSize();
                    LoadSize();
                    newThongTin();;
                }
                if (rdoChatLieu.isSelected() == true) {

                    chatLieu_DAO.Delete(ma);
                    loadTableChatlieu();
                    LoadChatLieu();
                    newThongTin();;
                }
                if (rdoNoiSanXuat.isSelected() == true) {

                    noiSanXuat_DAO.Delete(ma);
                    loadTableNSX();
                    newThongTin();;
                    LOadNoiSx();
                }
                if (rdoHinhAnh.isSelected() == true) {

                    hinhAnh_DAO.Delete(ma);
                    loadTableAnh();
                    LoadHinhAnh();
                    newThongTin();;
                }
            }
        }

    }//GEN-LAST:event_jButton15ActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        String tensp = txtTimKiem.getText();
        ArrayList<SanPhamBan> listSp = sanPham_Dao.TimKiem(tensp);

        dtmSanPham.setRowCount(0);
        for (SanPhamBan sp : listSp) {
            dtmSanPham.addRow(new Object[]{sp.getMaSp(), sp.getTenSp(), sp.getGiaTien(), sp.getGiaNhap(), sp.getSoLuong(), sp.getTenDanhMuc(), sp.getTenMau(), sp.getTenHnag(), sp.getTenLoai(), sp.getSoSize(), sp.getTenChatLieu(), sp.getTenNSX(), sp.getTenHinhAnh(), sp.getMoTa(), sp.getTrangThai()});

        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnAddDanhmucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDanhmucActionPerformed
        String danhmuc = JOptionPane.showInputDialog(this, "Mời Thêm Danh Mục", "thông báo", WIDTH);
        System.out.println(danhmuc);
        if (danhmuc == null || danhmuc.equals("")) {

        } else {
            DanhMuc sp = new DanhMuc(danhmuc, 0);
            danhMuc_Dao.Add(sp);
            LoadDanhMuc();
        }


    }//GEN-LAST:event_btnAddDanhmucActionPerformed

    private void btnAddMauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMauActionPerformed
        String danhmuc = JOptionPane.showInputDialog(this, "Mời Thêm Màu", "thông báo", WIDTH);
        if (danhmuc == null || danhmuc.equals("")) {

        } else {
            Mau sp = new Mau(danhmuc, 0);
            mau_Dao.Add(sp);
            LoadMau();
        }
    }//GEN-LAST:event_btnAddMauActionPerformed

    private void btnAddHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHangActionPerformed
        String danhmuc = JOptionPane.showInputDialog(this, "Mời Thêm Hãng", "thông báo", WIDTH);
        if (danhmuc == null || danhmuc.equals("")) {

        } else {
            Hang sp = new Hang(danhmuc, 0);
            hang_Dao.Add(sp);
            LoadHang();
        }
    }//GEN-LAST:event_btnAddHangActionPerformed

    private void btnAddLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLoaiActionPerformed
        String danhmuc = JOptionPane.showInputDialog(this, "Mời Thêm Loại", "thông báo", WIDTH);
        if (danhmuc == null || danhmuc.equals("")) {

        } else {
            LoaiGiay sp = new LoaiGiay(danhmuc, 0);
            loai_Dao.Add(sp);
            LoadLoai();
        }
    }//GEN-LAST:event_btnAddLoaiActionPerformed

    private void btnAddSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSizeActionPerformed
        String danhmuc = JOptionPane.showInputDialog(this, "Mời Thêm Size", "thông báo", WIDTH);
        if (danhmuc == null || danhmuc.equals("")) {

        } else {
            if ((isNumeric(danhmuc))) {
                int size = Integer.parseInt(danhmuc);
                if (size <= 0) {
                    JOptionPane.showMessageDialog(this, "Size phải lớn hơn 0");
                    return;
                }
                Size sp = new Size(0, Integer.parseInt(danhmuc));
                size_DAO.Add(sp);
                LoadSize();
            } else {
                JOptionPane.showMessageDialog(this, "Size dạng số nguyên");
            }
        }


    }//GEN-LAST:event_btnAddSizeActionPerformed

    private void btnAddChatLieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddChatLieuActionPerformed
        String danhmuc = JOptionPane.showInputDialog(this, "Mời Thêm Chất Liệu", "thông báo", WIDTH);
        if (danhmuc == null || danhmuc.equals("")) {

        } else {
            ChatLieu sp = new ChatLieu(danhmuc, 0);
            chatLieu_DAO.Add(sp);
            LoadChatLieu();
        }
    }//GEN-LAST:event_btnAddChatLieuActionPerformed

    private void btnAddNsxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNsxActionPerformed
        // TODO add your handling code here:
        String danhmuc = JOptionPane.showInputDialog(this, "Mời Thêm Nơi Sản Xuất", "thông báo", WIDTH);
        if (danhmuc == null || danhmuc.equals("")) {

        } else {
            NoiSanXuat sp = new NoiSanXuat(danhmuc, 0);
            noiSanXuat_DAO.Add(sp);
            LOadNoiSx();
        }
    }//GEN-LAST:event_btnAddNsxActionPerformed

    private void btnAddHinhAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHinhAnhActionPerformed
        try {
            JFileChooser jfc = new JFileChooser("C:\\DuAn1\\DuAn1_new\\DuAn1_Nhom686_GiayTeddy\\src\\Images");

            FileFilter filter = new FileNameExtensionFilter("Image file", ImageIO.getReaderFileSuffixes());
            jfc.setFileFilter(filter);

            int chooser = jfc.showOpenDialog(this);
            if (chooser == JFileChooser.APPROVE_OPTION) {
                File file = jfc.getSelectedFile();
                Image img = ImageIO.read(file);
                String anh = file.getName();
                HinhAnh sp = new HinhAnh(anh, 0);
                hinhAnh_DAO.Add(sp);
                LoadHinhAnh();

            } else {

            }
        } catch (IOException ex) {
            Logger.getLogger(QlSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnAddHinhAnhActionPerformed

    private void cbbHinhAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbHinhAnhActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbbHinhAnhActionPerformed

    private void tblSanPham1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPham1MouseReleased
        if (evt.isPopupTrigger()) {
            jMenuItem2.setText("Chuyển sang tình trạng còn hàng");

            jPopupMenu2.show(evt.getComponent(), evt.getX(), evt.getY());

        }
    }//GEN-LAST:event_tblSanPham1MouseReleased

    private void tblSanPhamMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseReleased
        if (evt.isPopupTrigger()) {
            jMenuItem1.setText("Chuyển sang tình trạng hết hàng");
            jMenuItem4.setText("Tạo Mã QRCode");
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tblSanPhamMouseReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        int intdex = tblSanPham.getSelectedRow();
        if (intdex == -1) {
            return;
        } else {
            String MaSp = txtMaSp.getText();
            String TenSp = txtTenSp.getText();
            Float GiaBan = Float.parseFloat(txtGiaBan.getText());
            Float GiaNhap = Float.parseFloat(txtGiaNhap.getText());

            int SoLuong = Integer.parseInt(txtSoLuong.getText());
            String Mota = txtMoTa.getText();
            Boolean ConHang = this.rdoConHang.isSelected();
            int tinhtrang = 0;

            tinhtrang = 0;

            DanhMuc dm = (DanhMuc) cbbDm.getSelectedItem();
            Mau mau = (Mau) cbbmau.getSelectedItem();
            Hang hang = (Hang) cbbhang.getSelectedItem();
            LoaiGiay loaigiay = (LoaiGiay) cbbloai.getSelectedItem();
            Size size = (Size) cbbsize.getSelectedItem();
            ChatLieu chatlieu = (ChatLieu) cbbchatlieu.getSelectedItem();
            NoiSanXuat nsx = (NoiSanXuat) cbbnoisanxuat.getSelectedItem();
            HinhAnh hinhanh = (HinhAnh) cbbhinhanh.getSelectedItem();
            SanPham sp = new SanPham(MaSp, TenSp, Mota, GiaBan, GiaNhap, 0, SoLuong, tinhtrang, dm.getMaDanhMuc(), size.getMaSize(), mau.getMaMau(), chatlieu.getMaChatLieu(), hang.getMaHang(), loaigiay.getMaLoai(), nsx.getMaNoiSanXuat(), hinhanh.getMaHinhAnh());

            sanPham_Dao.Update(sp);
            LoadTable();
            loadTable1();
        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        int intdex = tblSanPham1.getSelectedRow();
        if (intdex == -1) {
            return;
        } else {
            String MaSp = txtMaSp.getText();
            String TenSp = txtTenSp.getText();
            Float GiaBan = Float.parseFloat(txtGiaBan.getText());
            Float GiaNhap = Float.parseFloat(txtGiaNhap.getText());

            int SoLuong = Integer.parseInt(txtSoLuong.getText());
            String Mota = txtMoTa.getText();
            Boolean ConHang = this.rdoConHang.isSelected();
            int tinhtrang = 1;

            DanhMuc dm = (DanhMuc) cbbDm.getSelectedItem();
            Mau mau = (Mau) cbbmau.getSelectedItem();
            Hang hang = (Hang) cbbhang.getSelectedItem();
            LoaiGiay loaigiay = (LoaiGiay) cbbloai.getSelectedItem();
            Size size = (Size) cbbsize.getSelectedItem();
            ChatLieu chatlieu = (ChatLieu) cbbchatlieu.getSelectedItem();
            NoiSanXuat nsx = (NoiSanXuat) cbbnoisanxuat.getSelectedItem();
            HinhAnh hinhanh = (HinhAnh) cbbhinhanh.getSelectedItem();
            SanPham sp = new SanPham(MaSp, TenSp, Mota, GiaBan, GiaNhap, 0, SoLuong, tinhtrang, dm.getMaDanhMuc(), size.getMaSize(), mau.getMaMau(), chatlieu.getMaChatLieu(), hang.getMaHang(), loaigiay.getMaLoai(), nsx.getMaNoiSanXuat(), hinhanh.getMaHinhAnh());

            sanPham_Dao.Update(sp);
            LoadTable();
            loadTable1();
        }

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed

        try {
            int index = tblSanPham.getSelectedRow();
            String Masp = dtmSanPham.getValueAt(index, 0).toString();
            genarateQRCode(Masp);
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddChatLieu;
    private javax.swing.JButton btnAddDanhmuc;
    private javax.swing.JButton btnAddHang;
    private javax.swing.JButton btnAddHinhAnh;
    private javax.swing.JButton btnAddLoai;
    private javax.swing.JButton btnAddMau;
    private javax.swing.JButton btnAddNsx;
    private javax.swing.JButton btnAddSize;
    private javax.swing.JButton btnCapNhatThongTin;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLoc;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemThongTin;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbbChatLieu;
    private javax.swing.JComboBox<String> cbbDanhMuc;
    private javax.swing.JComboBox<String> cbbDanhMucLOc;
    private javax.swing.JComboBox<String> cbbHang;
    private javax.swing.JComboBox<String> cbbHangLoc;
    private javax.swing.JComboBox<String> cbbHinhAnh;
    private javax.swing.JComboBox<String> cbbLoai;
    private javax.swing.JComboBox<String> cbbLoaiLoc;
    private javax.swing.JComboBox<String> cbbMau;
    private javax.swing.JComboBox<String> cbbNoiSanXuat;
    private javax.swing.JComboBox<String> cbbSize;
    private javax.swing.JButton jButton15;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JLabel lblHinhAnh1;
    private javax.swing.JPanel panelAnh;
    private javax.swing.JRadioButton rdoChatLieu;
    private javax.swing.JRadioButton rdoConHang;
    private javax.swing.JRadioButton rdoDanhMuc;
    private javax.swing.JRadioButton rdoHang;
    private javax.swing.JRadioButton rdoHetHang;
    private javax.swing.JRadioButton rdoHinhAnh;
    private javax.swing.JRadioButton rdoLoai;
    private javax.swing.JRadioButton rdoMau;
    private javax.swing.JRadioButton rdoNoiSanXuat;
    private javax.swing.JRadioButton rdoSize;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTable tblSanPham1;
    private javax.swing.JTable tblThongTinSp;
    private javax.swing.JTextField txtGiaBan;
    private javax.swing.JTextField txtGiaNhap;
    private javax.swing.JTextField txtMaSp;
    private javax.swing.JTextField txtMaThongTin;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSp;
    private javax.swing.JTextField txtTenThongTin;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void LoadDanhMuc() {
        ArrayList<DanhMuc> listDM = danhMuc_Dao.all();
        cbbDm.removeAllElements();
        cbbDanhMucL.removeAllElements();
        for (int i = 0; i < listDM.size(); i++) {
            cbbDm.addElement(listDM.get(i));
            cbbDanhMucL.addElement(listDM.get(i));

        }
    }

    private void LoadMau() {
        ArrayList<Mau> listDM = mau_Dao.all();
        cbbmau.removeAllElements();
        for (int i = 0; i < listDM.size(); i++) {
            cbbmau.addElement(listDM.get(i));

        }
    }

    private void LoadHang() {
        ArrayList<Hang> listDM = hang_Dao.all();
        cbbhang.removeAllElements();
        cbbHangL.removeAllElements();
        for (int i = 0; i < listDM.size(); i++) {
            cbbhang.addElement(listDM.get(i));
            cbbHangL.addElement(listDM.get(i));

        }
    }

    private void LoadLoai() {
        ArrayList<LoaiGiay> listDM = loai_Dao.all();
        cbbloai.removeAllElements();
        cbbLoaiL.removeAllElements();
        for (int i = 0; i < listDM.size(); i++) {
            cbbloai.addElement(listDM.get(i));
            cbbLoaiL.addElement(listDM.get(i));

        }
    }

    private void LoadSize() {
        ArrayList<Size> listDM = size_DAO.all();
        cbbsize.removeAllElements();
        for (int i = 0; i < listDM.size(); i++) {
            cbbsize.addElement(listDM.get(i));

        }
    }

    private void LoadChatLieu() {
        ArrayList<ChatLieu> listDM = chatLieu_DAO.all();
        cbbchatlieu.removeAllElements();
        for (int i = 0; i < listDM.size(); i++) {
            cbbchatlieu.addElement(listDM.get(i));

        }
    }

    private void LOadNoiSx() {
        ArrayList<NoiSanXuat> listDM = noiSanXuat_DAO.all();
        cbbnoisanxuat.removeAllElements();
        for (int i = 0; i < listDM.size(); i++) {
            cbbnoisanxuat.addElement(listDM.get(i));

        }
    }

    private void LoadHinhAnh() {
        ArrayList<HinhAnh> listDM = hinhAnh_DAO.all();
        cbbhinhanh.removeAllElements();
        for (int i = 0; i < listDM.size(); i++) {
            cbbhinhanh.addElement(listDM.get(i));

        }
    }

    private void LoadTable() {
        ArrayList<SanPhamBan> listSp = sanPham_Dao.SlectSPB();
        dtmSanPham.setRowCount(0);
        for (SanPhamBan sp : listSp) {
            dtmSanPham.addRow(new Object[]{sp.getMaSp(), sp.getTenSp(), sp.getGiaTien(), sp.getGiaNhap(), sp.getSoLuong(), sp.getTenDanhMuc(), sp.getTenMau(), sp.getTenHnag(), sp.getTenLoai(), sp.getSoSize(), sp.getTenChatLieu(), sp.getTenNSX(), sp.getTenHinhAnh(), sp.getMoTa(), sp.getTrangThai()});

        }

    }

    private void loadTable1() {
        ArrayList<SanPhamBan> listSp = sanPham_Dao.allll();
        dtmSanPham1.setRowCount(0);
        for (SanPhamBan sp : listSp) {
            dtmSanPham1.addRow(new Object[]{sp.getMaSp(), sp.getTenSp(), sp.getGiaTien(), sp.getGiaNhap(), sp.getSoLuong(), sp.getTenDanhMuc(), sp.getTenMau(), sp.getTenHnag(), sp.getTenLoai(), sp.getSoSize(), sp.getTenChatLieu(), sp.getTenNSX(), sp.getTenHinhAnh(), sp.getMoTa(), sp.getTrangThai()});

        }
    }

    private void LoadAnh() {

    }

    private void LoadTableDanhMuc() {
        ArrayList<DanhMuc> listDm = danhMuc_Dao.all();
        dtmThongTinSp.setRowCount(0);
        for (DanhMuc d : listDm) {
            dtmThongTinSp.addRow(new Object[]{d.getMaDanhMuc(), d.getTenDanhMuc()});

        }
    }

    private void formDanhMuc(String tendm) {
        ArrayList<DanhMuc> listDm = danhMuc_Dao.all();

        for (DanhMuc d : listDm) {
            if (d.getTenDanhMuc().equals(tendm)) {
                cbbDm.setSelectedItem(d);
            }

        }
    }

    private void loadTableMau() {
        ArrayList<Mau> listm = mau_Dao.all();
        dtmThongTinSp.setRowCount(0);
        for (Mau m : listm) {
            dtmThongTinSp.addRow(new Object[]{m.getMaMau(), m.getTenMau()});

        }
    }

    private void formMau(String tenMau) {
        ArrayList<Mau> listm = mau_Dao.all();

        for (Mau m : listm) {
            if (m.getTenMau().equals(tenMau)) {
                cbbmau.setSelectedItem(m);
            }

        }
    }

    private void loadTableHang() {
        ArrayList<Hang> listHang = hang_Dao.all();
        dtmThongTinSp.setRowCount(0);
        for (Hang h : listHang) {
            dtmThongTinSp.addRow(new Object[]{h.getMaHang(), h.getTenHang()});

        }
    }

    private void formHang(String tenhang) {
        ArrayList<Hang> listHang = hang_Dao.all();

        for (Hang h : listHang) {
            if (h.getTenHang().equals(tenhang)) {
                cbbhang.setSelectedItem(h);
            }

        }
    }

    private void loadTableLoai() {
        ArrayList<LoaiGiay> listLoai = loai_Dao.all();
        dtmThongTinSp.setRowCount(0);
        for (LoaiGiay l : listLoai) {
            dtmThongTinSp.addRow(new Object[]{l.getMaLoai(), l.getTenLoai()});

        }
    }

    private void formLoai(String tenloai) {
        ArrayList<LoaiGiay> listLoai = loai_Dao.all();

        for (LoaiGiay l : listLoai) {
            if (l.getTenLoai().equals(tenloai)) {
                cbbloai.setSelectedItem(l);
            }

        }
    }

    private void loadtableSize() {
        ArrayList<Size> listSize = size_DAO.all();
        dtmThongTinSp.setRowCount(0);
        for (Size s : listSize) {
            dtmThongTinSp.addRow(new Object[]{s.getMaSize(), s.getSoSize()});

        }
    }

    private void formSize(int soSize) {
        ArrayList<Size> listSize = size_DAO.all();

        for (Size s : listSize) {
            if (s.getSoSize() == soSize) {
                cbbsize.setSelectedItem(s);
            }

        }
    }

    private void loadTableChatlieu() {
        ArrayList<ChatLieu> listChatlieu = chatLieu_DAO.all();
        dtmThongTinSp.setRowCount(0);
        for (ChatLieu c : listChatlieu) {
            dtmThongTinSp.addRow(new Object[]{c.getMaChatLieu(), c.getTenChatLieu()});

        }
    }

    private void Formchatlieu(String tenchatlieu) {
        ArrayList<ChatLieu> listChatlieu = chatLieu_DAO.all();

        for (ChatLieu c : listChatlieu) {
            if (c.getTenChatLieu().equals(tenchatlieu)) {
                cbbchatlieu.setSelectedItem(c);
            }

        }
    }

    private void loadTableNSX() {
        ArrayList<NoiSanXuat> listNSX = noiSanXuat_DAO.all();
        dtmThongTinSp.setRowCount(0);
        for (NoiSanXuat n : listNSX) {
            dtmThongTinSp.addRow(new Object[]{n.getMaNoiSanXuat(), n.getTenNoiSanXuat()});
        }

    }

    private void formNoisanxuat(String tennsx) {
        ArrayList<NoiSanXuat> listNSX = noiSanXuat_DAO.all();

        for (NoiSanXuat n : listNSX) {
            if (n.getTenNoiSanXuat().equals(tennsx)) {
                cbbnoisanxuat.setSelectedItem(n);
            }
        }

    }

    private void loadTableAnh() {
        ArrayList<HinhAnh> listAnh = hinhAnh_DAO.all();
        dtmThongTinSp.setRowCount(0);
        for (HinhAnh a : listAnh) {
            dtmThongTinSp.addRow(new Object[]{a.getMaHinhAnh(), a.getTenHinhAnh()});

        }
    }

    private void formAnh(String tenanh) {
        ArrayList<HinhAnh> listAnh = hinhAnh_DAO.all();
        for (HinhAnh h : listAnh) {
            if (h.getTenHinhAnh().equals(tenanh)) {
                cbbhinhanh.setSelectedItem(h);
            }

        }
    }

    public static boolean isNumeric(String str) {
        return str.matches("-?\\d+(\\.\\d+)?");
    }

    private void loadAnh() {

        HinhAnh h = (HinhAnh) cbbhinhanh.getSelectedItem();
        lblHinhAnh.setText("");
        ImageIcon icon = new ImageIcon("src/Images/" + h.getTenHinhAnh());
        Image image = icon.getImage();
        strHinhAnh = h.getTenHinhAnh();
        lblHinhAnh.setIcon(new ImageIcon(image.getScaledInstance(344, 344, 0)));
    }

    private void newThongTin() {
        txtTenThongTin.setText("");
        txtMaThongTin.setText("");
        lblHinhAnh1.setText("Hình ảnh");
        lblHinhAnh1.setIcon(null);
    }

    boolean checkDinhDang() {
        String regex = "^[0-9]{1,}$";
        String giaban = txtGiaBan.getText();
        String gianhap = txtGiaNhap.getText();
        String soluong = txtSoLuong.getText();
        if (!giaban.matches(regex)) {

            JOptionPane.showMessageDialog(this, "Gía Bán  lớn hơn 0 ", "Thông báo", WIDTH);
            return false;
        }
        if (!gianhap.matches(regex)) {

            JOptionPane.showMessageDialog(this, "Gía nhập  lớn hơn 0 ", "Thông báo", WIDTH);
            return false;
        }
        if (!soluong.matches(regex)) {

            JOptionPane.showMessageDialog(this, " Số lượng  lớn hơn 0 ", "Thông báo", WIDTH);
            return false;
        }
        return true;

    }

    private boolean check() {

        if (txtTenSp.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Tên sản phẩm chưa được nhập", "Thông báo", WIDTH);
            return false;
        }
        if (txtGiaBan.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Gía bán chưa được nhập", "Thông báo", WIDTH);
            return false;
        }
        if (txtGiaNhap.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Gía nhập sản phẩm chưa được nhập", "Thông báo", WIDTH);
            return false;
        }
        if (txtSoLuong.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Số Lượng sản phẩm chưa được nhập", "Thông báo", WIDTH);
            return false;
        }
        if (!isNumeric(txtGiaBan.getText())) {
            JOptionPane.showMessageDialog(this, "Gía Bán  dạng số ", "Thông báo", WIDTH);
            return false;
        } else {

        }

        if (!isNumeric(txtGiaNhap.getText())) {
            JOptionPane.showMessageDialog(this, "Gía Nhập  dạng số ", "Thông báo", WIDTH);
            return false;
        }

        if (!isNumeric(txtSoLuong.getText())) {
            JOptionPane.showMessageDialog(this, "Số Lượng dạng số ", "Thông báo", WIDTH);
            return false;
        }

        return true;
    }

    private boolean checkThongtin() {
        if (txtTenThongTin.getText().equals("")) {
            return false;

        }

        return true;
    }

    public static void genarateQRCode(String Masp) throws WriterException, IOException, NotFoundException {

        String data = Masp;

        BitMatrix bitMatrix = new MultiFormatWriter().encode(data, BarcodeFormat.QR_CODE, 400, 400);
        String output = "QRCode/" + data + ".jpg";
        System.out.println(output);
        MatrixToImageWriter.writeToPath(bitMatrix, "jpg", Paths.get(output));
        ImageIcon icon = new ImageIcon("src/icons/Accept.png");
        JOptionPane.showMessageDialog(null, "Tạo mã QRCODE thành công", "thông báo", JOptionPane.QUESTION_MESSAGE, icon);
    }

}
